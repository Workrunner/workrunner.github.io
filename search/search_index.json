{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Workrunner Wiki!\n\n\nWorkrunner is a platform for easy-to-use and easy-to-design business applications. It's built on a highly advanced BPM engine to manage any kind of business processes. Each application is defined as a business process that manages your work for you. All process data is isolated by your domain and secured safely.\n\n\nWorkrunner User's Guide\n\n\nUser's guide section gives you a quick introduction to Workrunner and its basic features.\n\n\nWorkrunner Administrator's Guide\n\n\nInformation for advanced users can be found in our Advanced User Guide, which contains details on the Workrunner management and development.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-workrunner-wiki", 
            "text": "Workrunner is a platform for easy-to-use and easy-to-design business applications. It's built on a highly advanced BPM engine to manage any kind of business processes. Each application is defined as a business process that manages your work for you. All process data is isolated by your domain and secured safely.", 
            "title": "Welcome to Workrunner Wiki!"
        }, 
        {
            "location": "/#workrunner-users-guide", 
            "text": "User's guide section gives you a quick introduction to Workrunner and its basic features.", 
            "title": "Workrunner User's Guide"
        }, 
        {
            "location": "/#workrunner-administrators-guide", 
            "text": "Information for advanced users can be found in our Advanced User Guide, which contains details on the Workrunner management and development.", 
            "title": "Workrunner Administrator's Guide"
        }, 
        {
            "location": "/ug/user_guide/", 
            "text": "This guide covers features and functions that are available to Workrunner users and administrators. \n\n\n\n\nGetting Started\n\n\nBusiness Process\n\n\nUser Interface\n\n\nHome Page\n\n\nUser Panel\n\n\nActivity Stream\n\n\nLabels\n\n\nWork List\n\n\nWorklist\n\n\nWorklist Tasks\n\n\nDelegation\n\n\nSpecific Task\n\n\nFor a Time Period\n\n\nBy the Admin\n\n\n\n\n\n\nSearch\n\n\nHistory\n\n\n\n\n\n\nFolders\n\n\nMarket", 
            "title": "Overview"
        }, 
        {
            "location": "/ug/getting_started/", 
            "text": "What is Workrunner and how does it work?\n\n\nWorkrunner is designed to manage your business processes and is a complete business process management solution that provides a dynamic, easy-to-use environment for all type of processes. With the Market Store of Workrunner, you can instantly start to use existing processes designed by other users. Can't find the process you're looking for? Design your own! It's that easy.\n\n\nWhat is a process?\n\n\nPut simply, a process is a way of doing your work. It's a structured way of organizing activities or tasks that produce a specific service or product.\n\n\nFor example: When your computer is malfunctioning you may call a technical person on the phone and wait for him to come over, or you may start Workrunner's Incident Request process that is automatically assigned to the relevant technical personnel instantly, and the status of your request is traced in real time.\n\n\nUsing a clearly-defined process flow saves you from chaos while doing your work. All of your \ndaily business activities\n can ultimately be defined as a process .\n\n\nStarting to use Workrunner\n\n\nThe first step is to \nregister your domain\n. Domains are registered free of charge and for an unlimited period of time. Depending on your business needs, you can then install pre-builded apps from Workrunner market store to manage various processes or you can design your own process(es) if needed.\n\n\nBecause most business processes need organizational data, after you have registered, Workrunner automatically starts a new \"Organization Designer\" process and assigns a task to you related to your organizational structure. This task is optional, so you can open it and build your organization hierarchy straight away, or skip it for now and define it later.\n\n\nAll processes work just like an email client;\n\n\nWhen you start a process, Workrunner assigns next tasks to people in your organization. When they complete the task, the process moves to the next step if required. Some processes may be started automatically by the system. For example reminding you of a customer's birthday every year.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/ug/getting_started/#what-is-workrunner-and-how-does-it-work", 
            "text": "Workrunner is designed to manage your business processes and is a complete business process management solution that provides a dynamic, easy-to-use environment for all type of processes. With the Market Store of Workrunner, you can instantly start to use existing processes designed by other users. Can't find the process you're looking for? Design your own! It's that easy.", 
            "title": "What is Workrunner and how does it work?"
        }, 
        {
            "location": "/ug/getting_started/#what-is-a-process", 
            "text": "Put simply, a process is a way of doing your work. It's a structured way of organizing activities or tasks that produce a specific service or product.  For example: When your computer is malfunctioning you may call a technical person on the phone and wait for him to come over, or you may start Workrunner's Incident Request process that is automatically assigned to the relevant technical personnel instantly, and the status of your request is traced in real time.  Using a clearly-defined process flow saves you from chaos while doing your work. All of your  daily business activities  can ultimately be defined as a process .", 
            "title": "What is a process?"
        }, 
        {
            "location": "/ug/getting_started/#starting-to-use-workrunner", 
            "text": "The first step is to  register your domain . Domains are registered free of charge and for an unlimited period of time. Depending on your business needs, you can then install pre-builded apps from Workrunner market store to manage various processes or you can design your own process(es) if needed.  Because most business processes need organizational data, after you have registered, Workrunner automatically starts a new \"Organization Designer\" process and assigns a task to you related to your organizational structure. This task is optional, so you can open it and build your organization hierarchy straight away, or skip it for now and define it later.  All processes work just like an email client;  When you start a process, Workrunner assigns next tasks to people in your organization. When they complete the task, the process moves to the next step if required. Some processes may be started automatically by the system. For example reminding you of a customer's birthday every year.", 
            "title": "Starting to use Workrunner"
        }, 
        {
            "location": "/ug/business_process/", 
            "text": "Defining a Business Process\n\n\nA \nbusiness process\n, also referred to as a business method, can be understood as a grouping together of related, structured actions or tasks resulting in a specific service or product (serving a particular purpose) for a particular customer or customers, either internal or external. By using a flowchart, a process can be visualized as a sequence of activities with interleaving decision points. By using a process matrix, it can be viewed as a sequence of activities with relevant rules based on data in the process.\n\n\nThere are three types of business processes:\n\n\n\n\nManagement processes\n are the processes that govern the operation of a system. Typical management processes include \"corporate governance\" and \"strategic management\".\n\n\nOperational processes\n are processes that constitute the core business and create the primary value stream. Typical operational processes are purchasing, manufacturing, advertising and marketing, and sales.\n\n\nSupporting processes\n are those which support the core processes. Examples include accounting, recruitment, call center, technical support.\n\n\n\n\nA business process begins with a target and ends, ideally, with the achievement of the business objective. Organizations which are process-oriented seek to remove the barriers of rigid structural departments and attempt to avoid functional silos.\n\n\nA business process can be further broken down into several sub-processes, each of which has its own attributes, but also contribute to achieving the overall goal. The analysis of business processes typically includes the mapping of processes and sub-processes down to the activity level.\n\n\nBusiness processes are designed to \nadd value for the customer\n and should not include unnecessary activities. The outcome of a well designed business process is \nincreased effectiveness\n (value for the customer) and \nincreased efficiency\n (less costs for the company).\n\n\nBusiness processes can be modeled through a large number of methods and techniques. For instance, the Business Process Modeling Notation is a Business Process Modeling technique that can be used for drawing business processes in a workflow.\n\n\nThe Process Chain\n\n\nBusiness processes contain a set of sequential sub-processes or tasks, each with alternative paths depending on certain conditions, performed to achieve a given objective or produce a given output. Each process requires one or more forms of input. The input and output may be received from, or sent to other business processes, other organizational units, or internal or external stakeholders.\n\n\nBusiness processes are designed to be operated by one or more business functional units, and emphasize the importance of the \u201cprocess chain\u201d rather than the individual units.\n\n\nIn general, the various tasks of a business process can be performed in one of two ways\n\n\n\n\nManually\n\n\nElectronically; by means of business data processing systems.\n\n\n\n\nTypically, some process tasks will be done by hand, while some will be computer-based, and these tasks may be sequenced in many ways. In other words, the data and information that are being handled through the process may pass through manual or computer tasks in any given order.", 
            "title": "Business Process"
        }, 
        {
            "location": "/ug/business_process/#defining-a-business-process", 
            "text": "A  business process , also referred to as a business method, can be understood as a grouping together of related, structured actions or tasks resulting in a specific service or product (serving a particular purpose) for a particular customer or customers, either internal or external. By using a flowchart, a process can be visualized as a sequence of activities with interleaving decision points. By using a process matrix, it can be viewed as a sequence of activities with relevant rules based on data in the process.  There are three types of business processes:   Management processes  are the processes that govern the operation of a system. Typical management processes include \"corporate governance\" and \"strategic management\".  Operational processes  are processes that constitute the core business and create the primary value stream. Typical operational processes are purchasing, manufacturing, advertising and marketing, and sales.  Supporting processes  are those which support the core processes. Examples include accounting, recruitment, call center, technical support.   A business process begins with a target and ends, ideally, with the achievement of the business objective. Organizations which are process-oriented seek to remove the barriers of rigid structural departments and attempt to avoid functional silos.  A business process can be further broken down into several sub-processes, each of which has its own attributes, but also contribute to achieving the overall goal. The analysis of business processes typically includes the mapping of processes and sub-processes down to the activity level.  Business processes are designed to  add value for the customer  and should not include unnecessary activities. The outcome of a well designed business process is  increased effectiveness  (value for the customer) and  increased efficiency  (less costs for the company).  Business processes can be modeled through a large number of methods and techniques. For instance, the Business Process Modeling Notation is a Business Process Modeling technique that can be used for drawing business processes in a workflow.", 
            "title": "Defining a Business Process"
        }, 
        {
            "location": "/ug/business_process/#the-process-chain", 
            "text": "Business processes contain a set of sequential sub-processes or tasks, each with alternative paths depending on certain conditions, performed to achieve a given objective or produce a given output. Each process requires one or more forms of input. The input and output may be received from, or sent to other business processes, other organizational units, or internal or external stakeholders.  Business processes are designed to be operated by one or more business functional units, and emphasize the importance of the \u201cprocess chain\u201d rather than the individual units.  In general, the various tasks of a business process can be performed in one of two ways   Manually  Electronically; by means of business data processing systems.   Typically, some process tasks will be done by hand, while some will be computer-based, and these tasks may be sequenced in many ways. In other words, the data and information that are being handled through the process may pass through manual or computer tasks in any given order.", 
            "title": "The Process Chain"
        }, 
        {
            "location": "/ug/home_page/", 
            "text": "The home page is Workrunner's main page and user interface, listing the tasks that are currently assigned to you. The interface supports all modern browsers (IE, Firefox, Chrome, Opera) and is optimized for all mobile devices with JavaScript capabilities. \n\n\nThe home page is consisted of three parts. \n\n\n\n\nUser panel\n on the top bar.\n\n\nThe body consists of \nactivity stream\n, \nlabels\n, \ncalendar\n, \nadministration\n and \nmarket\n.\n\n\nWorklist\n on the right side of home page.\n\n\n\n\nMain UI:", 
            "title": "Home Page"
        }, 
        {
            "location": "/ug/user_panel/", 
            "text": "User panel place is found at the top-right side of the screen, to carry out user-specific actions like changing your password, program language or configuring system notifications. Click on user name, a drop-down menu will appear in the interface. In the menu, you may find links to My Profile, Send Feedback and Log Out.\n\n\n\n\nMy Profile\n\n\nMy profil is a short description of user information. My profil is happened from basic information section, preferences section and logon methods section.\n\n\nBasic Information\n\n\nBasic information step is managed identity information of users.\n\n\nDisplay Name\n\nDisplay name is users mail address or any name to show on users panel.\n\n\nName\n\nName of user.\n\n\nSurname\n\nSurname of user.\n\n\n\n\nPreferences\n\n\nPreferences section is used to design image, e-mail address, language and themes features.\n\n\n\n\nImage\n\nAdd any image to show a picture beside your comments, actions etc. in the activities stream on the task screen.\n\n\ne-Mail Address\n\ne-mail address of user.\n\n\nLanguage\n\nYou can change user language in the Workrunner. Users will see language and same time language cultural on the brackets in there. Language cultural options will help to use to users for them language specific formatting like numbers, dates etc.\n\n\nThemes\n\nThemes option provide to change color style of user interface.\n\n\nColors options are;\n\n\n\n\nDefault\n\n\nClean\n\n\nBlue\n\n\nSun\n\n\nBlocks \n\n\n\n\nYou can learn how to change user profile preference settings by watching this video:\n\n\n\n\n\nLogon Methods\n\nLogon methods is managed to set password process and login into Workrunner using a external authentication process. \n\n\n\n\nSet Password\n\n\n\n\nClick Set Password or New Logon button.\n\n\nEnter your password.\n\n\nEnter your password for confirmation.\n\n\nClick Set Password button.\n\n\n\n\nAdd New Logon\n\n\n\n\nClick Set Password or New Logon button.\n\n\nClick any logon.\n\n\n\n\n\n\nYou can learn how to change your password by watching this video:\n\n\n\n\n\nSend Feedback\n\n\nProvides a feedback form to send notifications about Workrunner. Your feedback is valuable to us and all negative or positive feedbacks are considered carefully. We constantly strive to improve our services based on your feedback.\n\n\n\n\nLog Out\n\n\nLets user log off from the system securely. All of the stored cookies are removed from the system and the user is redirected to the log in page.", 
            "title": "User Panel"
        }, 
        {
            "location": "/ug/user_panel/#my-profile", 
            "text": "My profil is a short description of user information. My profil is happened from basic information section, preferences section and logon methods section.", 
            "title": "My Profile"
        }, 
        {
            "location": "/ug/user_panel/#basic-information", 
            "text": "Basic information step is managed identity information of users.  Display Name \nDisplay name is users mail address or any name to show on users panel.  Name \nName of user.  Surname \nSurname of user.", 
            "title": "Basic Information"
        }, 
        {
            "location": "/ug/user_panel/#preferences", 
            "text": "Preferences section is used to design image, e-mail address, language and themes features.   Image \nAdd any image to show a picture beside your comments, actions etc. in the activities stream on the task screen.  e-Mail Address \ne-mail address of user.  Language \nYou can change user language in the Workrunner. Users will see language and same time language cultural on the brackets in there. Language cultural options will help to use to users for them language specific formatting like numbers, dates etc.  Themes \nThemes option provide to change color style of user interface.  Colors options are;   Default  Clean  Blue  Sun  Blocks    You can learn how to change user profile preference settings by watching this video:   Logon Methods \nLogon methods is managed to set password process and login into Workrunner using a external authentication process.    Set Password   Click Set Password or New Logon button.  Enter your password.  Enter your password for confirmation.  Click Set Password button.   Add New Logon   Click Set Password or New Logon button.  Click any logon.    You can learn how to change your password by watching this video:", 
            "title": "Preferences"
        }, 
        {
            "location": "/ug/user_panel/#send-feedback", 
            "text": "Provides a feedback form to send notifications about Workrunner. Your feedback is valuable to us and all negative or positive feedbacks are considered carefully. We constantly strive to improve our services based on your feedback.", 
            "title": "Send Feedback"
        }, 
        {
            "location": "/ug/user_panel/#log-out", 
            "text": "Lets user log off from the system securely. All of the stored cookies are removed from the system and the user is redirected to the log in page.", 
            "title": "Log Out"
        }, 
        {
            "location": "/ug/activity_stream/", 
            "text": "An activity stream is a list of recent activities performed by an user, on an Workrunner. Activity stream is unique for each user in the system and users can't see other users activity stream list. Also you can sent message to other users in the Workrunner with activity stream.\n\n\n\n\nAdd comment in to message field.\n\n\n\n\n\n\n\n\nSymbol\n\n\nDefinition\n\n\n\n\n\n\n\n\n\n\n\n\nIt is used to import files or document in to message.\n\n\n\n\n\n\n\n\nIt is used to add link in to message.\n\n\n\n\n\n\n\n\nShare To\n\nThis field is used for choosing that sent message to user, group or unit. \n\n\nSubmit\n\nSubmit is send action button. \n\n\nCancel\n\nCancel is canceled action button. \n\n\nWhen you sent message to your collaborator, your collaborator will see your message in to her/him activity stream page.\n\n\nImport Options\n\nYou can import files in to message box to using different options.\n\n\n \n\n\n\n\nMy computer, you can use to import files from your computer in to Workrunner.\n\n\nCamera, you can take a photo using your computer camera and attaching this photo in to message box.  \n\n\nGoogle drive, you can use to import files from your google drive account in to Workrunner.\n\n\nOne drive, you can use to import files from your one drive account in to Workrunner.\n\n\nOffice 365, you can use to import files from your office 365 account in to Workrunner.\n\n\n\n\nActivity Heartbeat\n\nYou can follow your Workrunner activities and the total system activities in activity heartbeat diagram.\n\n\n\n\n\n\nYellow line is your's activities.\n\n\nRed line is total system's activities.", 
            "title": "Activity Stream"
        }, 
        {
            "location": "/ug/labels/", 
            "text": "You can use labels to categorize your tasks. Labels are like folders but additionally, you can apply multiple labels to a task. You can also;\n\n\n\n\nSelect a label from left side of home page to see all tasks with that label.\n\n\nSearch for all tasks with a label.\n\n\n\n\n \n\n\nWorkrunner defines 6 simple labels to make an easy-to-manage task list.\n\n\nInbox\n\nAll new tasks are automatically tagged with Inbox label. You can remove label from task if you want to hide it from inbox list.\n\n\nImportant\n\nTasks moved by the user are listed in the important tag. \n\n\nAll Waiting\n\nAll tasks which require your action to continue process are automatically tagged with All Waiting label.\n\n\nWatched\n\nAll tasks which are followed by you. You can look your tasks. \n\n\nSent\n\nAll the tasks which were started by you or assigned to you and waiting for an action to advance.\n\n\nAll\n\nLists all the tasks assigned to you regardless of their state.\n\n\nThese labels are predefined, and they cannot removed or changed, but you can add your own labels as needed.\n\n\nCreating a New Label\n\n\nTo create a new label in your label list;\n\n\n\n\nSelect label then you will see your label name with \"undefined\" end of label list, click on there.\n\n\nType name of the new label on displayed form, then click \nOK\n to close it.\n\n\nYou can select a parent label to move under an existing label. This is optional.\n\n\n\n\n \n\n\nAssigning a Label to a Task\n\n\nSelect or open any task from list to display label toolbar.\n\n\n\n\nSelect \nLabel\n button to display label list\u00df\n\n\nSelect one or more label and click to apply.\n\n\n\n\nMoving a Task to a Label\n\n\nTo move a task from list to another label;\n\n\n\n\nSelect or open any task from list to display label toolbar.\n\n\nSelect \nMove\n button to display label list.\n\n\nSelect label name from drop down list and click apply.", 
            "title": "Labels"
        }, 
        {
            "location": "/ug/labels/#creating-a-new-label", 
            "text": "To create a new label in your label list;   Select label then you will see your label name with \"undefined\" end of label list, click on there.  Type name of the new label on displayed form, then click  OK  to close it.  You can select a parent label to move under an existing label. This is optional.", 
            "title": "Creating a New Label"
        }, 
        {
            "location": "/ug/labels/#assigning-a-label-to-a-task", 
            "text": "Select or open any task from list to display label toolbar.   Select  Label  button to display label list\u00df  Select one or more label and click to apply.", 
            "title": "Assigning a Label to a Task"
        }, 
        {
            "location": "/ug/labels/#moving-a-task-to-a-label", 
            "text": "To move a task from list to another label;   Select or open any task from list to display label toolbar.  Select  Move  button to display label list.  Select label name from drop down list and click apply.", 
            "title": "Moving a Task to a Label"
        }, 
        {
            "location": "/ug/worklist/", 
            "text": "Work list is a list of to-do tasks while running a business process. For example approving an expense form is a task for manager or resolving a reported technical problem is a task for service desk.\n\n\nTool bar, work list tool bar and filter bar are managed to worklist. \n\n\nTool Bar\n\n\nTool bar is allowing the user to select a variety of functions.\n\n\n\n\nRefresh\n\nRenews your work list.\n\n\nSearch\n\n\nSearches\n your tasks.\n\n\nUser Panel\n\nSee your profil information in \nuser panel\n option.\n\n\nSupport\n\nFinds to solve for your program problem in \nsupport\n option.\n\n\nWork List Tool Bar\n\n\nTasks are listed and to follow in the work list tool bar. \n\n\n\n\nTask Name\n\nWhat the task is about and instructions of what must be done to complete the task. You can open the task by clicking on task name.\n\n\nFrom\n\nWho has sent the task to you. Some tasks are started automatically and this field may be empty.\n\n\nStarted At\n\nWhen the task is started. Will be updated.\n\n\nDeadline\n\nDeadline date of task if set. When deadline date passes Workrunner automatically close the task and advance.\n\n\nFolder\n\n\nFolder\n name of task. Beginner task is created from inside process in the folder.\n\n\n#\n\nTrack number of task. Each started process gets an incremental number for tracking if needed. You can open more detailed history of task by click on track number.\n\n\nPaging\n\n\nSelects your \ntask\n list and decide to interval row.\n\n\nPrevious Page and Next Page\n\nSelects your old and new tasks pages.\n\n\n\n\nFilter\n\nFilter option is listed tasks in the work list. Tasks name are separated from each other under the filter, also task count is written near to task name. When you click on task name under the filter, related tasks are listed in the work list bar.", 
            "title": "Worklist"
        }, 
        {
            "location": "/ug/worklist/#tool-bar", 
            "text": "Tool bar is allowing the user to select a variety of functions.   Refresh \nRenews your work list.  Search  Searches  your tasks.  User Panel \nSee your profil information in  user panel  option.  Support \nFinds to solve for your program problem in  support  option.", 
            "title": "Tool Bar"
        }, 
        {
            "location": "/ug/worklist/#work-list-tool-bar", 
            "text": "Tasks are listed and to follow in the work list tool bar.    Task Name \nWhat the task is about and instructions of what must be done to complete the task. You can open the task by clicking on task name.  From \nWho has sent the task to you. Some tasks are started automatically and this field may be empty.  Started At \nWhen the task is started. Will be updated.  Deadline \nDeadline date of task if set. When deadline date passes Workrunner automatically close the task and advance.  Folder  Folder  name of task. Beginner task is created from inside process in the folder.  # \nTrack number of task. Each started process gets an incremental number for tracking if needed. You can open more detailed history of task by click on track number.", 
            "title": "Work List Tool Bar"
        }, 
        {
            "location": "/ug/worklist/#paging", 
            "text": "Selects your  task  list and decide to interval row.  Previous Page and Next Page \nSelects your old and new tasks pages.   Filter \nFilter option is listed tasks in the work list. Tasks name are separated from each other under the filter, also task count is written near to task name. When you click on task name under the filter, related tasks are listed in the work list bar.", 
            "title": "Paging"
        }, 
        {
            "location": "/ug/worklist_tasks/", 
            "text": "Task Toolbar\n\n\nTask toolbar page organize tasks action in Workrunner, you can manage and \ndelegate\n tasks in this page. Task toolbar stable actions are close,print, add, remove labels and forward.\n\n\n\n\n\n\nClose is used leave task without save.\n\n\nMove to button is used a task from list to another label\n\n\nLabel as button is used to select or open any task from list to display label toolbar.\n\n\nPrint is used to print task. \n\n\nHistory button is used to arrive history information of task.\n\n\nForward button is used to delegate task to user, group or unit.\n\n\n\n\n\n\nSave button and send to approval button are created when \nprocess\n is designed.\nLocked Tasks\n\n\nLocked tasks locks task to selected user in Workrunner. Some of tasks may be sent to more than one person in your organization, and when you open the task you may see a locked form. A locked form is only for previewing the task, and cannot be unlocked until lock time is expired, or the task is closed without taking any other action, by the user who have locked the form.", 
            "title": "Worklist Tasks"
        }, 
        {
            "location": "/ug/worklist_tasks/#task-toolbar", 
            "text": "Task toolbar page organize tasks action in Workrunner, you can manage and  delegate  tasks in this page. Task toolbar stable actions are close,print, add, remove labels and forward.    Close is used leave task without save.  Move to button is used a task from list to another label  Label as button is used to select or open any task from list to display label toolbar.  Print is used to print task.   History button is used to arrive history information of task.  Forward button is used to delegate task to user, group or unit.    Save button and send to approval button are created when  process  is designed.\nLocked Tasks  Locked tasks locks task to selected user in Workrunner. Some of tasks may be sent to more than one person in your organization, and when you open the task you may see a locked form. A locked form is only for previewing the task, and cannot be unlocked until lock time is expired, or the task is closed without taking any other action, by the user who have locked the form.", 
            "title": "Task Toolbar"
        }, 
        {
            "location": "/ug/specific_task/", 
            "text": "In some situations like when you are too busy with some urgent task and have no time to deal with your waiting tasks or when you are out of the office to do some other work such as meeting a client or when you went on leave; you may want to delegate someone else in the office to take care of your tasks. In Workrunner, there are several ways to delegate your tasks to another person depending on your choice.\n\n\nWhen you delegate someone for specific task(s), the assigned person becomes responsible only for the specified task(s).\n\n\nBy the User\n\n\nIf you have something urgent and you know you can\u2019t make time for the tasks that assigned to you, open the related task window and you will see the \nForward\n button in the navigation as shown below in the picture with three options;\n\n\n\n\nRecently Used\n\nYou can see last selected in there.\n\n\nOrganization\n\nWhen clicked on the \norganization\n text box a pop up window appears and also when you click on the plus you will see department name and when you click on plus the near to department then you will see users name or users position.\n\n\nSearch Results\n\nIf you cannot find the user or users you need, you can type her/his name to search for it or you can just click on the search results button to look for it.\n\n\nAfter this when you click OK button, the person you selected will be assigned to the task you wanted to.\n\n\nYou can learn how to forward a task by watching this video :", 
            "title": "Specific Task"
        }, 
        {
            "location": "/ug/specific_task/#by-the-user", 
            "text": "If you have something urgent and you know you can\u2019t make time for the tasks that assigned to you, open the related task window and you will see the  Forward  button in the navigation as shown below in the picture with three options;   Recently Used \nYou can see last selected in there.  Organization \nWhen clicked on the  organization  text box a pop up window appears and also when you click on the plus you will see department name and when you click on plus the near to department then you will see users name or users position.  Search Results \nIf you cannot find the user or users you need, you can type her/his name to search for it or you can just click on the search results button to look for it.  After this when you click OK button, the person you selected will be assigned to the task you wanted to.  You can learn how to forward a task by watching this video :", 
            "title": "By the User"
        }, 
        {
            "location": "/ug/time_period/", 
            "text": "If you will be out of the office for a period of time, let\u2019s say for a week or month, you might need to make sure that someone should be assigned to your possible forthcoming tasks. To achieve this go to your calendar by clicking on\nthe \nMy Calendar\n link on the left hand side menu.\n\n\n  \n\n\nOn your calendar page switch to the preferred view out of Month, Week or Day by clicking on it from the page navigation. Then on the calendar, select the time interval that the person will be delegated for. You can do this in two ways, let\u2019s say we are in the monthly view:\n\n\n\n\nFirst one is clicking on a day and selecting the delegate from the menu as we have done before and then by clicking the \nAdd New\n button on the pop-up. After this, clicking on the right end of the delegation and dragging it along the x axis will stretch it in the steps of one day. In the Week and Day views you need to click the bottom side and drag it along the y axis.\n\n\n\n\n \n\n  \n\n\n\n\nSecond one is clicking on the start point of the decided interval and then dragging to the end point. After this selection, you only need to select the delegate and to press \nAdd New\n button. \n\n\nYou can always extend or shorten the delegation time after the creation using the first option described above.\n\n\n\n\n\n\nYou can learn how to temporarily delegate your worklist to your colleague by watching this video:", 
            "title": "For a Time Period"
        }, 
        {
            "location": "/ug/by_admin/", 
            "text": "As similar to the previous one when you are busy doing some other works but now if you are not able to delegate someone else in your place or you forgot doing it before leaving, you can ask your admin to do it for you. As the admin user, go to the \nadministration\n page by clicking the button shown in the picture;\n\n\n\n\nand on the Administration page, click on the \nSearch Work Item\n.", 
            "title": "By Admin"
        }, 
        {
            "location": "/ug/search/", 
            "text": "You can use the search options to find the items you need. At the top bar, there is a search field that allows you to search the selected container for items that match a specified \nsearch\n keyword.\n\n\n\n\nWorkrunner system gives users various search options. There are:\n\n\nTerms\n\nTwo types of search term option is available.\n\n\n\n\nA Single Term is a single word such as \u201c purchase\u201d or \u201corder\u201d.\n\n\nA Phrase is a group of words surrounded by double quotes such as \"purchase order\".\n\n\n\n\nFields\n\nYou can search any field by typing the field name followed by a colon \n:\n and then the term you are looking for.\n\n\n\n\n\n\nIf you want to find the document entitled \"Purchase Order\" which contains the text \"order\", you can enter: \n\n\ntitle:\u201dPurchase Order\u201d AND text:go\n or \ntitle:\u201dPurchase Order\u201d AND order\n\n\n\n\n\n\nThe field is only valid for the term that it directly precedes, so the query\n\n\ntitle:invoice approval information\n \n\nwill only find \"purchase\" in the title field. It will find \"approval\" and \"information\" in the default field.\n\n\n\n\n\n\nWildcard Searches\n\nWorkrunner system supports single and multiple character wildcard searches within single terms (not within phrase queries).\n\n\nTo perform a single character wildcard search use the \n?\n symbol.\n\n\nTo perform a multiple character wildcard search use the \n*\n symbol.\n\n\n\n\n\n\nThe single character wildcard search looks for terms that match that with the single character replaced. For example, to search for \"invoice\" or \"expense\" you can use the search:\n\n\ninvo?ce\n\n\n\n\n\n\n\n\n\nMultiple character wildcard searches looks for 0 or more characters. For example, to search for expense or expenses you can use the search:\n\n\nexpense*\n\n\n\n\n\n\n\n\n\nYou can also use the wildcard searches in the middle of a term.\n\n\nexp*ense\n\n\n\n\n\n\n\n\n\nNote: You cannot use a \n*\n or \n?\n symbol as the first character of a search.\n\n\nFuzzy Searches\n\n\nWorkrunner system supports fuzzy searches. To do a fuzzy search use the tilde, \n~\n, symbol at the end of a single word Term.\n\n\n\n\n\n\nTo search for a term similar in spelling to \"expense\" use the fuzzy search:\n\n\nexpense~\n\n\n\n\n\n\n\n\n\nThe value is between 0 and 1, with a value closer to 1 only terms with a higher similarity will be matched. For example:\n\n\nexpense~0,8\n\n\n\n\n\n\n\n\n\nThe default that is used if the parameter is not given is 0.5.\n\n\nProximity Searches\n\nWorkrunner system supports finding words are a within a specific distance away. To do a proximity search use the tilde, \n~\n, symbol at the end of a Phrase. For example to search for a \"form\" and \"expense\" within 10 words of each other in a document use the search:\n\n\n    \u201cexpense form\u201d~10\n\n\n\n\n\nRange Searches\n\nRange Queries allow one to match documents whose field(s) values are between the lower and upper bound specified by the Range Query.\n\n\n\n\nRange Queries can be inclusive or exclusive of the upper and lower bounds. Sorting is done lexicographically.\nMod_date:[300201 TO 300501]\n\n\n\n\n\n\n\n\n\nThis will find documents whose mod_date fields have values between 300201 and 30050, inclusive.\n\n\n\n\nNote that Range Queries are not reserved for date fields. You could also use range queries with non-date fields:\nTitle:{Document TO Invoice}\n\n\n\n\n\n\n\n\n\nThis will find all documents whose titles are between Document and Invoice, but not including Document and Invoice.\n\n\nInclusive range queries are denoted by square brackets. Exclusive range queries are denoted by curly brackets.\n\n\nBoosting a Term\n\nWorkrunner system provides the relevance level of matching documents based on the terms found. To boost a term use the caret, \n^\n, symbol with a boost factor (a number) at the end of the term you are searching. The higher the boost factor, the more relevant the term will be.\n\n\n\n\nBoosting allows you to control the relevance of a document by boosting its term. For example, if you are searching for\nexpense form\n\n\n\n\n\n\n\n\n\nand you want the term \"expense\" to be more relevant boost it using the \n^\n symbol along with the boost factor next to the term. You would type:\n\n\n    expense^4 form\n\n\n\n\n\n\n\nThis will make documents with the term expense appear more relevant. You can also boost Phrase Terms as in the example:\n \u201cexpense form\u201d^4\n\n\n\n\n\n\n\n\n\nBy default, the boost factor is 1. Although the boost factor must be positive, it can be less than 1.\n\n\nBoolean Operators\n\nBoolean operators allow terms to be combined through logic operators. Workrunnersystem supports \nAND\n, \n+\n, \nOR\n, \nNOT\n and \n-\n as Boolean operators(Note: Boolean operators must be \nALL CAPS\n).\n\n\nThe \nOR\n operator is the default conjunction operator. This means that if there is no Boolean operator between two terms, the \nOR\n operator is used. The \nOR\n operator links two terms and finds a matching document if either of the terms exist in a document. This is equivalent to a union using sets. The symbol || can be used in place of the word \nOR\n.\n\n\n\n\nTo search for documents that contain either \"expense form\" or just \"expense\" use the query:\n\n\n\u201cexpense form\u201d expense\n or \n\u201cexpense form\u201d OR expense\n\n\n\n\nAND operator\n\nThe \nAND\n operator matches documents where both terms exist anywhere in the text of a single document. This is equivalent to an intersection using sets. The symbol \n can be used in place of the word \nAND\n.\n\n\nTo search for documents that contain \"Expense form\" and \"Invoice form\" use the query:\n\n\n \u201cexpense form\u201d AND \u201cInvoice form\u201d\n\n\n\n\n\n+ operator\n\nThe \n+\n or required operator requires that the term after the \n+\n symbol exist somewhere in a the field of a single document.\n\n\nTo search for documents that must contain \"expense\" and may contain \"form\" use the query:\n\n\n  +expense form\n\n\n\n\n\nNOT operator\n\nThe \nNOT\n operator excludes documents that contain the term after \nNOT\n. This is equivalent to a difference using sets. The symbol ! can be used in place of the word \nNOT\n.\n\n\n\n\n\n\nTo search for documents that contain\"purchase order\" but not \"expense form\" use the query:\n\n\n\u201cPurchase order\u201d NOT \u201cexpense form\u201d\n\n\n\n\n\n\n\n\n\nThe \nNOT\n operator cannot be used with just one term. For example, the following search will return no results:\n\n\nNOT\u201dpurchase order\u201d\n\n\n\n\n\n\n\n\n\nThe \n-\n or prohibit operator excludes documents that contain the term after the \n-\n symbol.\n\n\n\n\n\n\nTo search for documents that contain \u201cPurchase order\u201d but not \"\"expense form\" use the query:\n\n\n\u201cPurchase order\u201d - \u201cexpense form\u201d\n\n\nGrouping\n\nWorkrunner system supports using parentheses to group clauses to form sub queries. This can be very useful if you want to control the boolean logic for a query.\n\n\nTo search for either \"expense\" or \"purchase\" and \"inbox\" use the query:\n\n\n(expense OR purchase) AND inbox\n\n\n\n\n\nField Grouping\n\nWorkrunner system supports using parentheses to group multiple clauses to a single field. To search for a title that contains both the word \"expense\" and the phrase \"purchase order\" use the query:\n\n\ntitle:(+expense+\u201dpurchase order\u201d)\n\n\n\n\n\nEscaping Special Characters\n\nWorkrunner system  supports escaping special characters that are part of the query syntax. The current list special characters are\n\n\n+ - \n || ! ( ) { } [ ] ^ \n ~ * ? : \\\n\n\nTo escape these character use the  before the character. For example to search for \n(2+2):4\n use the query:\n\n\n\\(2\\+2\\)\\:4", 
            "title": "Search"
        }, 
        {
            "location": "/ug/history/", 
            "text": "Workrunner BPMS keeps all records of transactions during the execution of processes. Within History, all details, such as who started work, when the next steps are started and finished, what is being done, who owns the current step and so on, are stored as records.\n\n\nHistory information can be displayed as both in a graphical layout based on a process map and in a classic table order. Since history information contains process times, it enables analysis of areas in which process improvements can be identified after a certain point of use.\n\n\n\n\nTask Name\n\nName of task. When you click on the blue task name, this task form will open on the new page.\n\n\nStarted At\n\nStart date of task. \n\n\nFinished At\n\nFinish date of task. \n\n\nAssigned To\n\nPerson, department or group of responsible.\n\n\nStatus\n\nState of task. \n\n\n\n\n\n\n\n\nSymbol\n\n\nDefinition\n\n\n\n\n\n\n\n\n\n\n\n\nStart task\n\n\n\n\n\n\n\n\nCompleted task\n\n\n\n\n\n\n\n\nWaiting task\n\n\n\n\n\n\n\n\nIs Deadlined?\n\nAutomatically completed date of task.\n\n\nCompleted By\n\nCompletor of person. \n\n\nAction\n\nType of action. \n\n\nTask Color Definition in the Diagram:\n\n\n\n\n\n\n\n\nColor\n\n\nMeaning\n\n\n\n\n\n\n\n\n\n\nGrey\n\n\nStart task\n\n\n\n\n\n\nRed\n\n\nWaiting task\n\n\n\n\n\n\nOrange\n\n\nNext task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSymbol\n\n\nDefinition\n\n\n\n\n\n\n\n\n\n\n\n\nTo used for leaving history page\n\n\n\n\n\n\n\n\nTo used for enlarge the history page\n\n\n\n\n\n\n\n\nTo used for downsize the history page\n\n\n\n\n\n\n\n\nTo used to reach subflow tasks. Click on this button parent task instance number and sub tasks instance number will be listed. You can look each of sub task history\n\n\n\n\n\n\n\n\nYou can learn how to view task history in the worklist by watching this video :", 
            "title": "History"
        }, 
        {
            "location": "/ug/folders/", 
            "text": "Folder is a directory containing related process or documents in the Workrunner. The left of the screen contains the navigation menu for folders.\n\n\n\n\nStarting a new process\n\n\nAfter selecting a folder from navigation menu, all accessible processes are listed on the page. Clicking the process name will start the process. Some processes may be hidden because you do not have the permission to access or they have been disabled by the administrator.\n\n\n\n\nManaging a Folder\n\n\nThe folder toolbar is used to manage folder properties. This toolbar is only visible when you have 'write access' for the respective folder.\n\n\n\n\nNew Folder\n\nCreates a new folder in the current folder with the specified name.\n\n\nEdit\n\nChanges the folder name with the specified name.\n\n\nProcesses\n\nProvides an access list of processes installed on the current folder. This menu is only visible if write permission is available on folder.\n\n\nYou can learn how to move folders by watching this video:\n\n\n\n\n\nPermissions\n\n\nAllows the editing \naccess control list\n of the current folder. The access control list specifies who can access the folder and which permissions they have. Folder permissions can be specified as;\n\n\nSecurity Profile\n\nSecurity profil is used to permit special group for reach related folder. If \nsecurity group\n doesn't exist, system uses to default group. \n\n\nIdentity\n\nIdentity option is determined responsible person, unit or group. \n\n\nPermissions\n\n\n\n\nRead\n; Allows specified user or group to read contents of current folder and process.\n\n\nAll\n; Allows specified user or group to read and change contents of current folder and process.\n\n\n\n\nWhen you click the little downward arrow next to users name field, operation menu will be listed. Operation menu consists three subtitle, those are  type, begins at and expires at.\n\n\n\n\n\n\n\n\nType\n consists two specification for permit in the process. \n\n\nAllow\n\n\nDeny\n\n\n\n\n\n\nBegins at\n (optional), begin of permission date.\n\n\n\n\nExpires at\n (optional), finish of permission date.\n\n\n\n\nYou can learn how to manage permissions part by watching this video:\n\n\n\n\n\nDelete\n\nDeletes the current folder and its child folders.\n\n\nWhen a folder is deleted all of the related processes and tasks are automatically removed from the system. This action cannot be undone, therefore we recommend that instead of deleting a folder, remove user identities from the access control list to hide it from users.\n\n\nDashboard and Report\n\n\nDashboard and reports features can be designed, if process need it.  Dashboard and report are customized with processes and change accordingly to process specific graphics or listings.\n\n\nDashboard\n\n\nDashboard is submitted a graphical summary of important data, also it give an overview of a running process. After selecting a folder from the navigation menu, dashboards of the related process are listed on the page.\n\n\nExample dashboard:\n\nPie chart is shown active contract counts and each pieces of a contract type that are separated from each other with different color. When you overcome on the color with mouse you will see contract type name and count.\n\n\n \n\n\nActive contract some of features are listed under the pie chart. Those are revision date, inception of treaty, duration, end date and responsible.\n\n\nReport\n\n\nReports is used to detail process account or statement and to export excel list from system. \n\n\n\n\nYou can decide criteria what you want for report with using criteria decisions. When you click on search button, the corresponding feature data are listed on the screen.\n\n\nIf you want to learn how make report, click on \nhere\n.", 
            "title": "Folders"
        }, 
        {
            "location": "/ug/folders/#starting-a-new-process", 
            "text": "After selecting a folder from navigation menu, all accessible processes are listed on the page. Clicking the process name will start the process. Some processes may be hidden because you do not have the permission to access or they have been disabled by the administrator.", 
            "title": "Starting a new process"
        }, 
        {
            "location": "/ug/folders/#managing-a-folder", 
            "text": "The folder toolbar is used to manage folder properties. This toolbar is only visible when you have 'write access' for the respective folder.   New Folder \nCreates a new folder in the current folder with the specified name.  Edit \nChanges the folder name with the specified name.  Processes \nProvides an access list of processes installed on the current folder. This menu is only visible if write permission is available on folder.  You can learn how to move folders by watching this video:", 
            "title": "Managing a Folder"
        }, 
        {
            "location": "/ug/folders/#permissions", 
            "text": "Allows the editing  access control list  of the current folder. The access control list specifies who can access the folder and which permissions they have. Folder permissions can be specified as;  Security Profile \nSecurity profil is used to permit special group for reach related folder. If  security group  doesn't exist, system uses to default group.   Identity \nIdentity option is determined responsible person, unit or group.   Permissions   Read ; Allows specified user or group to read contents of current folder and process.  All ; Allows specified user or group to read and change contents of current folder and process.   When you click the little downward arrow next to users name field, operation menu will be listed. Operation menu consists three subtitle, those are  type, begins at and expires at.     Type  consists two specification for permit in the process.   Allow  Deny    Begins at  (optional), begin of permission date.   Expires at  (optional), finish of permission date.   You can learn how to manage permissions part by watching this video:   Delete \nDeletes the current folder and its child folders.  When a folder is deleted all of the related processes and tasks are automatically removed from the system. This action cannot be undone, therefore we recommend that instead of deleting a folder, remove user identities from the access control list to hide it from users.", 
            "title": "Permissions"
        }, 
        {
            "location": "/ug/folders/#dashboard-and-report", 
            "text": "Dashboard and reports features can be designed, if process need it.  Dashboard and report are customized with processes and change accordingly to process specific graphics or listings.", 
            "title": "Dashboard and Report"
        }, 
        {
            "location": "/ug/folders/#dashboard", 
            "text": "Dashboard is submitted a graphical summary of important data, also it give an overview of a running process. After selecting a folder from the navigation menu, dashboards of the related process are listed on the page.  Example dashboard: \nPie chart is shown active contract counts and each pieces of a contract type that are separated from each other with different color. When you overcome on the color with mouse you will see contract type name and count.     Active contract some of features are listed under the pie chart. Those are revision date, inception of treaty, duration, end date and responsible.", 
            "title": "Dashboard"
        }, 
        {
            "location": "/ug/folders/#report", 
            "text": "Reports is used to detail process account or statement and to export excel list from system.    You can decide criteria what you want for report with using criteria decisions. When you click on search button, the corresponding feature data are listed on the screen.  If you want to learn how make report, click on  here .", 
            "title": "Report"
        }, 
        {
            "location": "/ug/market/", 
            "text": "Workrunner market is a medium that allows potential costumers for meet our vertical applications. Vertical applications are prepared applications, also those are using from our costumers. Vertical applications title and summarizes are listed in the market. You can arrive to detail information when you click on title of application. All of applications are explained with below titles.\n\n\nVertical application page offers the application of specifications in the three part. Those are the features, the licensing and the details. \n\n\nFeatures\n\n\nFeatures part reports the application of purpose, specifications and can be use for which problems solutions. Application features is defined the main heading, subtitles and step of screenshots.\n\n\nLicensing\n\n\nLicensing part allows to users of access limit in the Workrunner.  Limit specification can be change depend on the application features. System sets using three ways to decide the application of license; those are the quota, the users posts and the project piece.\n\n\nDetails\n\n\nDetails part is defined the application other features.\n\n\nVersion\n\nLast edition number of application.\n\n\nLicense\n\nType of licence.\n\n\nCategory\n\nClassification of application.\n\n\nAuthor\n\nThe person who responsible to this application.", 
            "title": "Market"
        }, 
        {
            "location": "/ug/market/#features", 
            "text": "Features part reports the application of purpose, specifications and can be use for which problems solutions. Application features is defined the main heading, subtitles and step of screenshots.", 
            "title": "Features"
        }, 
        {
            "location": "/ug/market/#licensing", 
            "text": "Licensing part allows to users of access limit in the Workrunner.  Limit specification can be change depend on the application features. System sets using three ways to decide the application of license; those are the quota, the users posts and the project piece.", 
            "title": "Licensing"
        }, 
        {
            "location": "/ug/market/#details", 
            "text": "Details part is defined the application other features.  Version \nLast edition number of application.  License \nType of licence.  Category \nClassification of application.  Author \nThe person who responsible to this application.", 
            "title": "Details"
        }, 
        {
            "location": "/ag/admin_guide/", 
            "text": "Getting Started\n\n\nProcess Modeling\n\n\nProcess Diagram\n\n\nData Model\n\n\nXPath and XQuery\n\n\nForms\n\n\nDatabases\n\n\nLocalization\n\n\nNamespaces\n\n\nScreens\n\n\nScripting\n\n\nWeb Services\n\n\nData Templates\n\n\n\n\n\n\nProcess Administration\n\n\nProcess Access Control List\n\n\nBackground Jobs\n\n\n\n\n\n\nIntegration Services\n\n\nEmbedding Workrunner\n\n\nGoogle Service Authentication\n\n\nOffice365 Service Authentication\n\n\nRest Services\n\n\n\n\n\n\nSystem Administration\n\n\nOrganization Database\n\n\nEdit Domain\n\n\nEdit Groups\n\n\nBackground Jobs Manager\n\n\nSearch Work Item", 
            "title": "Overview"
        }, 
        {
            "location": "/ag/getting_started/", 
            "text": "Workrunner is designed to provide a single comprehensive web interface that encompasses all facets of a process lifecycle \u2013 analysis, modeling, simulation and continuous enhancement \u2013 and to eliminate the need for people to learn and use multiple different systems and applications. With a flexible architecture, it allows for rapid and frequent modifications to active processes and makes it easy to migrate older applications into service-oriented structures.\n\n\nOrganization\n\n\nOrganization in the Workrunner has a management structure that determines relationships between the different units, groups and the members. Also it assigns roles, responsibilities, and authority to carry out different tasks. \n\n\nProcess Modelling\n\n\nProcess modelling is the analytical representation and illustration in the Workrunner. Process modeling is used to map out a system\u2019s current processes to create a baseline for process improvements and to design future processes with those improvements incorporated. A process model is completely an anticipation of what the process will look like.\n\n\nBackground Jobs\n\n\nA background job is a the Workrunner job that runs behind the scenes and without any user interaction. Typical tasks for these processes include logging, system monitoring, scheduling, and user notification.\n\n\nKey Concepts\n\n\nThis page introduces some of key concepts related to designing a business process with Workrunner and terminology used.\n\n\nProcess\n\n\nPut simply, a process is a way of doing your work. It's a structured way of organizing activities or tasks that produce a specific service or product.\n\n\nFor example: When your computer is malfunctioning you may call a technical guy on the phone and wait for him to come over, or you may start Incident Request process that is automatically assigned to the relevant technical person and instantly trace the current status of your request.\n\n\nUsing a clearly-defined process flow saves you from chaos while doing your work. All of your daily business activities can ultimately be defined as a process.\n\n\nIn Workrunner everything you do is about starting a new process or completing an assigned task from your inbox. Even defining a new user or terminating a workflow instance is controlled by a process.\n\n\nFolder\n\n\nProcesses are categorized in a security controlled \nfolders\n. Folders are generally used to access start points of process or reporting business data. Folders can be contain other folders to build a hierarchical organization. You can create new folders any time or automatically created when you install a process from app store.\n\n\nProcess Definition\n\n\nIn Workrunner everything you define, stored in a process definition in a XML format. Process definition contains the all of required information (diagram, databases, reports, web service connections) to run. Process definitions are also versioned under processes for switch to different versions of process any time.\n\n\nBusiness Data\n\n\nEvery process exists to produce a result. In Workrunner from beginning to end result of process transported in XML format called as \ndata model\n. Data model may contain unlimited fields and lists. You can also store more complex data structures like hierarchies.\n\n\nGenerally business data is empty when workflow is started but while workflow advances data is filled by people or integrated systems.\n\n\nWork List\n\n\nWork List\n is a list of work items that assigned to people. Work items are filtered by tags to distinguish for easy access.  All of new assigned work items are tagged with \"Inbox\" but you can remove it to review later. Until work item is complete by you or another user all of waiting work items are tagged with \"All Waiting\" and you cant remove this tag. When you complete a work item its tagged with \"Sent\" tag. If you need to list of all work items without any state filter you can use the \"All\" tag.\n\n\nSome of work items are automatically tagged with \"Watched\" by process design and you can remove if no longer needed.\n\n\nAdditionally you can use your custom defined tags to filter work items.\n\n\nWork Item\n\n\nWork Item is a step in workflow, while workflow advances in process every step creates a new work item that assigned to people or system. Work item may be assigned to one or more user. Until it's complete by a user stays in user's work list. Some of work items are assigned to system to execute automated tasks and does not have interactive action with any user.\n\n\nDocument Archive\n\n\nDocument archive stores the all document based data. Documents may be generated by processes or manually imported by people. All of documents may contain one or more attached file and search profile. You can search documents by full text index or specific search fields.\n\n\nLife Cycle\n\n\nThis page explains the life cycle of creating an application in the Workrunner. Applications are created and run with agile methodology steps in the Workrunner.\n\n\nAgile methodology in the Workrunner uses adaptive approach where there is no detailed planning and there is clarity on future tasks only in respect of what features need to be developed. There is feature driven development and the Workrunner adapts to the changing product requirements dynamically.The product is tested very frequently, through the release iterations, minimizing the risk of any major failures in future.\n\n\nThe following steps describe how to work agile methodology life cycle in the Workrunner.\n\n\nRequirements Analysis\n\n\nRequirements analysis step starts to design process diagram in the Workrunner. Task is created for each process step in the diagram and task links are created.Process diagram shows an application working digit.\n\n\nSecond step is data model design. Also data models define how data is connected to each other. Process is divided section, sub section and elements after to define features for each elements in the data model.\n\n\nDesign\n\n\nDesign step corresponds to form design in the Workrunner. Form design section is connected data model of elements and to utilize elements for create form content. \n\n\nImplementation and Testing\n\n\nImplementation and testing steps are actualized at the same time in the Workrunner. The following steps explain how to test and implement process.\n\n\n\n\nSend form to user. \n\n\nIf process run, you will see task in to your inbox. When you open task, you will see designed form. \n\n\nEnter information in to form, click action button.\n\n\n\n\nEvolution\n\n\nEvolution step is last loop structure in the Workrunner. When faced any process problem, it is solved by using life cycle steps without stopping the process.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/ag/getting_started/#organization", 
            "text": "Organization in the Workrunner has a management structure that determines relationships between the different units, groups and the members. Also it assigns roles, responsibilities, and authority to carry out different tasks.", 
            "title": "Organization"
        }, 
        {
            "location": "/ag/getting_started/#process-modelling", 
            "text": "Process modelling is the analytical representation and illustration in the Workrunner. Process modeling is used to map out a system\u2019s current processes to create a baseline for process improvements and to design future processes with those improvements incorporated. A process model is completely an anticipation of what the process will look like.", 
            "title": "Process Modelling"
        }, 
        {
            "location": "/ag/getting_started/#background-jobs", 
            "text": "A background job is a the Workrunner job that runs behind the scenes and without any user interaction. Typical tasks for these processes include logging, system monitoring, scheduling, and user notification.", 
            "title": "Background Jobs"
        }, 
        {
            "location": "/ag/getting_started/#key-concepts", 
            "text": "This page introduces some of key concepts related to designing a business process with Workrunner and terminology used.", 
            "title": "Key Concepts"
        }, 
        {
            "location": "/ag/getting_started/#process", 
            "text": "Put simply, a process is a way of doing your work. It's a structured way of organizing activities or tasks that produce a specific service or product.  For example: When your computer is malfunctioning you may call a technical guy on the phone and wait for him to come over, or you may start Incident Request process that is automatically assigned to the relevant technical person and instantly trace the current status of your request.  Using a clearly-defined process flow saves you from chaos while doing your work. All of your daily business activities can ultimately be defined as a process.  In Workrunner everything you do is about starting a new process or completing an assigned task from your inbox. Even defining a new user or terminating a workflow instance is controlled by a process.", 
            "title": "Process"
        }, 
        {
            "location": "/ag/getting_started/#folder", 
            "text": "Processes are categorized in a security controlled  folders . Folders are generally used to access start points of process or reporting business data. Folders can be contain other folders to build a hierarchical organization. You can create new folders any time or automatically created when you install a process from app store.", 
            "title": "Folder"
        }, 
        {
            "location": "/ag/getting_started/#process-definition", 
            "text": "In Workrunner everything you define, stored in a process definition in a XML format. Process definition contains the all of required information (diagram, databases, reports, web service connections) to run. Process definitions are also versioned under processes for switch to different versions of process any time.", 
            "title": "Process Definition"
        }, 
        {
            "location": "/ag/getting_started/#business-data", 
            "text": "Every process exists to produce a result. In Workrunner from beginning to end result of process transported in XML format called as  data model . Data model may contain unlimited fields and lists. You can also store more complex data structures like hierarchies.  Generally business data is empty when workflow is started but while workflow advances data is filled by people or integrated systems.", 
            "title": "Business Data"
        }, 
        {
            "location": "/ag/getting_started/#work-list", 
            "text": "Work List  is a list of work items that assigned to people. Work items are filtered by tags to distinguish for easy access.  All of new assigned work items are tagged with \"Inbox\" but you can remove it to review later. Until work item is complete by you or another user all of waiting work items are tagged with \"All Waiting\" and you cant remove this tag. When you complete a work item its tagged with \"Sent\" tag. If you need to list of all work items without any state filter you can use the \"All\" tag.  Some of work items are automatically tagged with \"Watched\" by process design and you can remove if no longer needed.  Additionally you can use your custom defined tags to filter work items.", 
            "title": "Work List"
        }, 
        {
            "location": "/ag/getting_started/#work-item", 
            "text": "Work Item is a step in workflow, while workflow advances in process every step creates a new work item that assigned to people or system. Work item may be assigned to one or more user. Until it's complete by a user stays in user's work list. Some of work items are assigned to system to execute automated tasks and does not have interactive action with any user.", 
            "title": "Work Item"
        }, 
        {
            "location": "/ag/getting_started/#document-archive", 
            "text": "Document archive stores the all document based data. Documents may be generated by processes or manually imported by people. All of documents may contain one or more attached file and search profile. You can search documents by full text index or specific search fields.", 
            "title": "Document Archive"
        }, 
        {
            "location": "/ag/getting_started/#life-cycle", 
            "text": "This page explains the life cycle of creating an application in the Workrunner. Applications are created and run with agile methodology steps in the Workrunner.  Agile methodology in the Workrunner uses adaptive approach where there is no detailed planning and there is clarity on future tasks only in respect of what features need to be developed. There is feature driven development and the Workrunner adapts to the changing product requirements dynamically.The product is tested very frequently, through the release iterations, minimizing the risk of any major failures in future.  The following steps describe how to work agile methodology life cycle in the Workrunner.", 
            "title": "Life Cycle"
        }, 
        {
            "location": "/ag/getting_started/#requirements-analysis", 
            "text": "Requirements analysis step starts to design process diagram in the Workrunner. Task is created for each process step in the diagram and task links are created.Process diagram shows an application working digit.  Second step is data model design. Also data models define how data is connected to each other. Process is divided section, sub section and elements after to define features for each elements in the data model.", 
            "title": "Requirements Analysis"
        }, 
        {
            "location": "/ag/getting_started/#design", 
            "text": "Design step corresponds to form design in the Workrunner. Form design section is connected data model of elements and to utilize elements for create form content.", 
            "title": "Design"
        }, 
        {
            "location": "/ag/getting_started/#implementation-and-testing", 
            "text": "Implementation and testing steps are actualized at the same time in the Workrunner. The following steps explain how to test and implement process.   Send form to user.   If process run, you will see task in to your inbox. When you open task, you will see designed form.   Enter information in to form, click action button.", 
            "title": "Implementation and Testing"
        }, 
        {
            "location": "/ag/getting_started/#evolution", 
            "text": "Evolution step is last loop structure in the Workrunner. When faced any process problem, it is solved by using life cycle steps without stopping the process.", 
            "title": "Evolution"
        }, 
        {
            "location": "/ag/pm/process_modeling_toc/", 
            "text": "Process Diagram\n\n\nDiagram Overview\n\n\nPools\n\n\nTasks\n\n\nActions\n\n\nRoles\n\n\nRoutes\n\n\nMessage Templates\n\n\n\n\n\n\nData Model\n\n\nXPath and XQuery\n join\n\n\nForms\n\n\nForms Overview\n\n\nControls\n\n\nRules\n join\n\n\nCharts Design\n join\n\n\n\n\n\n\nDatabases\n join\n\n\nLocalization\n\n\nNamespaces\n\n\nScreens\n\n\nScripting\n\n\nScripting Modules\n\n\nReference\n\n\nVariables\n\n\n\n\n\n\nWeb Services\n\n\nData Templates", 
            "title": "Process Modeling TOC"
        }, 
        {
            "location": "/ag/pm/pd/diagram_overview/", 
            "text": "A process diagram is a visualized model consisting of \nTasks\n, \nActions\n, \nRoles\n and \nRoutes\n. For example a simple expense process is modeled as follows;\n\n\n\n\nLeave Request\n\nDefines the start task of the process. Employee can save or submit a leave request.\n\n\nManager Approval\n\nDefines the first approval task of the process. Manager can confirm or reject the request. If rejected, the process is routed back to the employee. \n\n\nHR Approval\n\nDefines the second approval task of the process. Human Resources can confirm or reject the request, and if HR confirms the request, confirmed request is recorded into HR database, else if rejected, the process is routed back to the manager.\n\n\nInform Employee\n\nDefines the inform employee task of the process. Employee can select OK and finish the process.\n\n\nDiagram Language\n\n\nBPMN or similar notations are generally contain technical terms like \"if\", \"split\", \"explicit join\" activities and require some skills to understand diagram. Emakin uses own process notation to describe processes to achieve understand processes by everyone without any education or skills needed.\n\n\nAccording to diagram above:\n\n\n\n\n\n\nGreen box\n identifies the start (initiator) task of pool.\n\n\n\n\n\n\nOrange boxes\n identify the intermediate task of pool.\n\n\n\n\n\n\nEach gray box that connected to tasks identifies the action as result of task that assigned user can select.\n\n\n\n\n\n\nLines between actions and tasks identify the routes to next task in process. If no route is found process is terminated with selected action.\n\n\n\n\n\n\nYou can learn how to build a process by watching this video :", 
            "title": "Diagram Overview"
        }, 
        {
            "location": "/ag/pm/pd/diagram_overview/#diagram-language", 
            "text": "BPMN or similar notations are generally contain technical terms like \"if\", \"split\", \"explicit join\" activities and require some skills to understand diagram. Emakin uses own process notation to describe processes to achieve understand processes by everyone without any education or skills needed.  According to diagram above:    Green box  identifies the start (initiator) task of pool.    Orange boxes  identify the intermediate task of pool.    Each gray box that connected to tasks identifies the action as result of task that assigned user can select.    Lines between actions and tasks identify the routes to next task in process. If no route is found process is terminated with selected action.    You can learn how to build a process by watching this video :", 
            "title": "Diagram Language"
        }, 
        {
            "location": "/ag/pm/pd/pools/", 
            "text": "Pool is a container of diagram. Most of the \nbusiness processes\n require more than one diagram for different operations. For example advance request and expense payment diagrams can be defined in one process. \n\n\nFor a pool, you can configure following:\n\n\nName\n\nIdentifies the pool. This information used only for process designers and are not visible by users.\n\n\nDefault Form\n\nDefault selected form to show users if task does not specify any form.\n\n\nData Root\n\nRoot data element be used from \ndata model\n. Different pools may share same root element if needed.\n\n\nIs Administrative ?\n\nCheck this option if pool is used only for administrative operations. When checked pool accessed only by user has \"write\" permission on process or is admin. For example; You may need to create an Options diagram to set process preferences.\n\n\nIs Anonymously Accessible ?\n\nCheck this option to allow anonymous (non-logged in) users. This option also requires anonymous access permission on domain preferences.\n\n\nDocumentation URL\n\nDocumentation URL address is used to link process documentation.\n\n\nSupport URL\n\nSupport URL address is used to link support site.\n\n\nAfter pool is created you can configure the tasks, roles and routes from graphical designer.\n\n\nPool also contains following properties:\n\n\nOpen Script\n\n\nScript to be executed for every new instances just before first task. This script may be useful to assign dynamically changing default values. (ex: assign current date to form value) Please refer to scripting section for more detail.\n\n\nClosing Script\n\n\nScript to be executed for every normally closed (by user action or deadline) instances. This script may be useful for export process data to any external system. Please refer to scripting section for more detail.\n\n\nTerminating Script\n\n\nScript to be executed for terminated (forced by administrative or system) instances. Please refer to scripting section for more detail.\n\n\nTemplates\n\n\nList of message templates to be used for mail notifications. More information can be found at \nMessage Templates\n section.\n\n\nVariables\n\n\nList of variables to use in scripting environment. Variables are used to define and easy to update static values to use in rule validations, formulas etc. Defined variables can be accessed with \n$\n sign prefix. Example: \n$ExpenseLimit\n\n\nVariable values can be override with \nTask\n definitions to update value in only task scope. Example: \n$AllowPriceChange\n can set to false in pool definition and can be set to true for administrative type tasks to disable on rule validation.", 
            "title": "Pools"
        }, 
        {
            "location": "/ag/pm/pd/pools/#open-script", 
            "text": "Script to be executed for every new instances just before first task. This script may be useful to assign dynamically changing default values. (ex: assign current date to form value) Please refer to scripting section for more detail.", 
            "title": "Open Script"
        }, 
        {
            "location": "/ag/pm/pd/pools/#closing-script", 
            "text": "Script to be executed for every normally closed (by user action or deadline) instances. This script may be useful for export process data to any external system. Please refer to scripting section for more detail.", 
            "title": "Closing Script"
        }, 
        {
            "location": "/ag/pm/pd/pools/#terminating-script", 
            "text": "Script to be executed for terminated (forced by administrative or system) instances. Please refer to scripting section for more detail.", 
            "title": "Terminating Script"
        }, 
        {
            "location": "/ag/pm/pd/pools/#templates", 
            "text": "List of message templates to be used for mail notifications. More information can be found at  Message Templates  section.", 
            "title": "Templates"
        }, 
        {
            "location": "/ag/pm/pd/pools/#variables", 
            "text": "List of variables to use in scripting environment. Variables are used to define and easy to update static values to use in rule validations, formulas etc. Defined variables can be accessed with  $  sign prefix. Example:  $ExpenseLimit  Variable values can be override with  Task  definitions to update value in only task scope. Example:  $AllowPriceChange  can set to false in pool definition and can be set to true for administrative type tasks to disable on rule validation.", 
            "title": "Variables"
        }, 
        {
            "location": "/ag/pm/pd/tasks/", 
            "text": "A task defines a step in process diagram. Tasks can be defined as user tasks or module tasks to execute automated steps in workflow. Every task has a list of \nactions\n to complete step in workflow.\n\n\n\n\nFor a task you can configure following common properties for a task:\n\n\nName\n (Not visible on diagram)\n\nName of task. Name information is not visible to users, and used to identify a task.\n\n\nCaption\n\nCaption of task. Captions are shown to users and can be localized when needed. Caption may contain the \ndata templates\n expressions to replace data from \ndata model\n.\n\n\nRole\n\n\nRole\n to be use assign task. Tasks may share same roles if assigned to same users, If not specified task is assigned to initiator of workflow.\n\n\nPrework\n\nScript to be executed before task assigned to role. Please refer \nPrework Script\n section for more details.\n\n\nPostwork\n\nScript to be executed after task is completed. Please refer [Postwork Script][6] section for more details.\n\n\nDelayed Execution\n\nCheck this field to process this task in delayed context. By default Workrunner executes task steps in synchronized context until task is assigned to a user or workflow is complete. If you check this field workflow engine temporarily stops execution at task and commits the current state to database. Remaining execution is performed in another transaction. In some cases you may need to use this field to ensure save current state and perform remaining operations in another error checking context.\n\n\nOptions\n\nList of task options. Task options are provides quick accessible to following task properties:\n\n\n\n\nNotification\n\n\nFirst Reminder\n\n\nRepeating Reminder\n\n\nDeadline\n\n\nWatchers\n\n\nEvaluation\n\n\n\n\n\n\nIf property enabled related icon is highlighted, task properties are not limited to options icons, Please use context menu to access more advanced properties.\n\n\nNotification\n\n\nNotify message is an information message. When the related task run, system will sent an information message to responsible user e-mail address.\n\n\nFirst Reminder\n\n\nFirst reminder option is a backlog first reminder time in the process. The system sent an information e-mail to user for backlog task when the time arrive to first reminder time.\n\n\nRepeating Remember\n\n\nRepeating remember option run after the first reminder time. System sent periodically an information e-mail to user for backlog. \n\n\nDeadline\n\n\nConfigures the deadline time and action for assigned tasks to complete automatically.\n\n\nDuration\n\nDuration of deadline after task is assigned.  Duration can be selected from list or can be manually entered in \nd.hh:mm:ss\n format. Duration also can be set in prework script in more dynamic behavior.\n\n\nAction\n\nAction to be selected if deadline occurs. This option is not mandatory if auto completion of task is not requested.\n\n\nSend Notify\n\nSend notify notification message about deadline. This option only visible when duration defined.\n\n\nWatchers\n\n\nThis option is necessary for to control task. Watchers option has two choice that are watcher role and send notify message. \n\n\n\n\nWatcher role is responsible user for the related task.\n\n\nSend notify message is notice message for the watcher role.\n\n\n\n\nEvaluation\n\n\nConfigures the task to perform scheduled operations. Depending on the task type, performs following:\n\n\nStart Point\n\nIf task is configured as start point Workrunner periodically initiates new instances depending on schedule and executes the evaluation script. When any action taken, it continues to next step on workflow.\n\n\nNormal\n\nIf task is configured as intermediate task, Workrunner periodically checks any waiting tasks and executes the evaluation script on it. When any action taken, it continues to next step on workflow.\n\n\nFor evaluation you can configure following:\n\n\nEnabled\n\nCheck this field to enable scheduled operation.\n\n\nSchedule\n\nSchedule of evaluation. \n\n\nScript\n\nScript to execute on scheduled event occurs. \n\n\nCommon Schedules\n\n\nHourly Schedule\n\nPerform every on 10 minutes.\n\n\nSchedule\n \nName=\n\n    \nRule\n \nType=\nHourly\n\n        \nDuration\n00:10:00\n/Duration\n\n    \n/Rule\n\n\n/Schedule\n\n\n\n\n\nWeekly Schedule\n\nPerform every day except sunday and saturday.\n\nSchedule\n \nName=\n\n    \nRule\n \nType=\nWeekly\n\n        \nDayOfWeek\nSunday\n/DayOfWeek\n\n        \nDayOfWeek\nSaturday\n/DayOfWeek\n\n    \n/Rule\n\n\n/Schedule\n\n\n\n\nPerform only \nonce\n on mondays.\n\nSchedule\n \nName=\nWeekly Leave Request Report\n\n    \nRule\n \nType=\nWeekly\n\n        \nDayOfWeek\nSunday\n/DayOfWeek\n\n        \nDayOfWeek\nTuesday\n/DayOfWeek\n\n        \nDayOfWeek\nWednesday\n/DayOfWeek\n\n        \nDayOfWeek\nThursday\n/DayOfWeek\n\n        \nDayOfWeek\nFriday\n/DayOfWeek\n\n        \nDayOfWeek\nSaturday\n/DayOfWeek\n\n    \n/Rule\n\n    \nRule\n \nType=\nDaily\n\n        \nStart\n09:05:00\n/Start\n\n        \nEnd\n09:05:59\n/End\n\n        \nInvert\nTrue\n/Invert\n\n    \n/Rule\n\n\n/Schedule\n\n\n\n\nDaily Schedule\n\nPerform every day, exactly at 16:01:00.\n\nSchedule\n \nName=\n\n    \nRule\n \nType=\nDaily\n\n        \nStart\n16:01:00\n/Start\n\n        \nEnd\n16:01:59\n/End\n\n        \nInvert\nTrue\n/Invert\n\n    \n/Rule\n\n\n/Schedule\n\n\n\n\nYearly Schedule\n\nPerform every 1th day in all months (Example: 20XX-XX-01)\n\nSchedule\n \nName=\n\n    \nRule\n \nType=\nYearly\n\n        \nDay\n1\n/Day\n\n   \n/Rule\n\n\n/Schedule\n\n\n\n\nPerform start of 4\nth\n month in every year (Example: 20XX-04-01)\n\nSchedule\n \nName=\n\n    \nRule\n \nType=\nYearly\n\n        \nMonth\n4\n/Month\n\n   \n/Rule\n\n\n/Schedule\n\n\n\n\nPerform at 4\nth\n month and 10\nth\n day in every year (Example: 20XX-04-10)\n\nSchedule\n \nName=\n\n    \nRule\n \nType=\nYearly\n\n        \nDay\n10\n/Day\n\n        \nMonth\n4\n/Month\n\n   \n/Rule\n\n\n/Schedule\n\n\n\n\nAnnual Schedule\n\nPerform by yearly basis. It basically excludes the date given and runs the scheduled task on every day except the given one.\n\n\nSchedule\n \nName=\n\n    \nRule\n \nType=\nAnnual\n\n        \nDate\n2000-02-25T00:00:00.0000000+00:00\n/Date\n\n   \n/Rule\n\n\n/Schedule\n\n\n\n\n\nVariables\n\n\nList of overriden Pool variables in task scope. Please refer \npool page\n for more information.\n\n\nForms\n\n\nThis feature can be used to set form to default, enabled, hidden or disabled status for each task. Forms feature becomes available after determining an element in the \nform design\n part. You can decide section status for every process step.\n\n\n\n\nDefault state inherits the rules from to form. Example; formatting and conditional rules. \n\n\nEnabled state permits to enter new information or change information in the section.\n\n\nHidden state hides section when related task run.\n\n\nDisabled state shows related section in the form but it doesn't permit to add new information or to change existing information in the section.\n\n\n\n\n[6]: postwork_script routes", 
            "title": "Simple Task"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#notification", 
            "text": "Notify message is an information message. When the related task run, system will sent an information message to responsible user e-mail address.", 
            "title": "Notification"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#first-reminder", 
            "text": "First reminder option is a backlog first reminder time in the process. The system sent an information e-mail to user for backlog task when the time arrive to first reminder time.", 
            "title": "First Reminder"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#repeating-remember", 
            "text": "Repeating remember option run after the first reminder time. System sent periodically an information e-mail to user for backlog.", 
            "title": "Repeating Remember"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#deadline", 
            "text": "Configures the deadline time and action for assigned tasks to complete automatically.  Duration \nDuration of deadline after task is assigned.  Duration can be selected from list or can be manually entered in  d.hh:mm:ss  format. Duration also can be set in prework script in more dynamic behavior.  Action \nAction to be selected if deadline occurs. This option is not mandatory if auto completion of task is not requested.  Send Notify \nSend notify notification message about deadline. This option only visible when duration defined.", 
            "title": "Deadline"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#watchers", 
            "text": "This option is necessary for to control task. Watchers option has two choice that are watcher role and send notify message.    Watcher role is responsible user for the related task.  Send notify message is notice message for the watcher role.", 
            "title": "Watchers"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#evaluation", 
            "text": "Configures the task to perform scheduled operations. Depending on the task type, performs following:  Start Point \nIf task is configured as start point Workrunner periodically initiates new instances depending on schedule and executes the evaluation script. When any action taken, it continues to next step on workflow.  Normal \nIf task is configured as intermediate task, Workrunner periodically checks any waiting tasks and executes the evaluation script on it. When any action taken, it continues to next step on workflow.  For evaluation you can configure following:  Enabled \nCheck this field to enable scheduled operation.  Schedule \nSchedule of evaluation.   Script \nScript to execute on scheduled event occurs.", 
            "title": "Evaluation"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#common-schedules", 
            "text": "Hourly Schedule \nPerform every on 10 minutes.  Schedule   Name= \n     Rule   Type= Hourly \n         Duration 00:10:00 /Duration \n     /Rule  /Schedule   Weekly Schedule \nPerform every day except sunday and saturday. Schedule   Name= \n     Rule   Type= Weekly \n         DayOfWeek Sunday /DayOfWeek \n         DayOfWeek Saturday /DayOfWeek \n     /Rule  /Schedule   Perform only  once  on mondays. Schedule   Name= Weekly Leave Request Report \n     Rule   Type= Weekly \n         DayOfWeek Sunday /DayOfWeek \n         DayOfWeek Tuesday /DayOfWeek \n         DayOfWeek Wednesday /DayOfWeek \n         DayOfWeek Thursday /DayOfWeek \n         DayOfWeek Friday /DayOfWeek \n         DayOfWeek Saturday /DayOfWeek \n     /Rule \n     Rule   Type= Daily \n         Start 09:05:00 /Start \n         End 09:05:59 /End \n         Invert True /Invert \n     /Rule  /Schedule   Daily Schedule \nPerform every day, exactly at 16:01:00. Schedule   Name= \n     Rule   Type= Daily \n         Start 16:01:00 /Start \n         End 16:01:59 /End \n         Invert True /Invert \n     /Rule  /Schedule   Yearly Schedule \nPerform every 1th day in all months (Example: 20XX-XX-01) Schedule   Name= \n     Rule   Type= Yearly \n         Day 1 /Day \n    /Rule  /Schedule   Perform start of 4 th  month in every year (Example: 20XX-04-01) Schedule   Name= \n     Rule   Type= Yearly \n         Month 4 /Month \n    /Rule  /Schedule   Perform at 4 th  month and 10 th  day in every year (Example: 20XX-04-10) Schedule   Name= \n     Rule   Type= Yearly \n         Day 10 /Day \n         Month 4 /Month \n    /Rule  /Schedule   Annual Schedule \nPerform by yearly basis. It basically excludes the date given and runs the scheduled task on every day except the given one.  Schedule   Name= \n     Rule   Type= Annual \n         Date 2000-02-25T00:00:00.0000000+00:00 /Date \n    /Rule  /Schedule", 
            "title": "Common Schedules"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#variables", 
            "text": "List of overriden Pool variables in task scope. Please refer  pool page  for more information.", 
            "title": "Variables"
        }, 
        {
            "location": "/ag/pm/pd/tasks/#forms", 
            "text": "This feature can be used to set form to default, enabled, hidden or disabled status for each task. Forms feature becomes available after determining an element in the  form design  part. You can decide section status for every process step.   Default state inherits the rules from to form. Example; formatting and conditional rules.   Enabled state permits to enter new information or change information in the section.  Hidden state hides section when related task run.  Disabled state shows related section in the form but it doesn't permit to add new information or to change existing information in the section.   [6]: postwork_script routes", 
            "title": "Forms"
        }, 
        {
            "location": "/ag/pm/pd/prework_script/", 
            "text": "Prework script are commonly used to control process data or task state before assign to the users.\n\n\nPrework script defined area is reached from related task. When you click on \nPrework script\n button on the task, prework script page will open.\n\n\nExample:\n\n\n\n\nIn prework script following objects are available:\n\n\n$WorkItem\n\nCurrent workitem instance.\n\n\n$Xml\n\nXml data navigator for \ndata model\n.\n\n\n$Instance\n\nCurrent workflow instance.\n\n\n$Initiator\n\nInitiator of workflow instance.\n\n\n$TestMode\n\nA boolean value that specifies the current workflow instance is in test mode.\n\n\n$Priority\n\nA number value between 0 to 5 that specifies the priority of workflow instance.\n\n\n$Culture\n\nA string value that specifies the initiated culture of workflow instance. (Example: \nen\n or \nde\n or \ntr\n)\n\n\n$Localization\n\nTranslation dictionary that provides localized texts.\n\n\n$Database\n\nProvides methods to query relational database.\n\n\n$Membership\n\nProvides methods to access organization database.\n\n\n$Calendar\n\nProvides methods for time based calculations and working hours calendar.\n\n\n$XmlRepository\n\nProvides methods to query non-relational database.\n\n\n$Domain\n\nAllows to access domain preferences.\n\n\n$Services\n\nAllows to access defined web services.\n\n\n$Messages\n\nAllows to send email messages.\n\n\n$Crypto\n\nPerforms cryptographic and digital signature operations.\n\n\n$Delegation\n\nAllows to access user delegation library.\n\n\n$Files\n\nAllows to access file repository.\n\n\n$Documents\n\nAllows to access document repository. \n\n\nCommon operations\n\n\nAuto Process Task\n\nAutomatically process current \nwork item\n without assign to users and skip to next step in workflow.\n\n\n//Assign action\n\n\n$WorkItem\n.\nSelectedAction\n \n=\n \nApprove\n;\n\n\n\n\nDynamic Deadline Date\n\nSet deadline date by user entered data.\n\n\n//Assign action\n\n\n$WorkItem\n.\nDeadlineDate\n \n=\n \n$Xml\n.\nEvaluateDateTime\n(\nPaymentDate\n);", 
            "title": "Prework Script"
        }, 
        {
            "location": "/ag/pm/pd/prework_script/#common-operations", 
            "text": "Auto Process Task \nAutomatically process current  work item  without assign to users and skip to next step in workflow.  //Assign action  $WorkItem . SelectedAction   =   Approve ;   Dynamic Deadline Date \nSet deadline date by user entered data.  //Assign action  $WorkItem . DeadlineDate   =   $Xml . EvaluateDateTime ( PaymentDate );", 
            "title": "Common operations"
        }, 
        {
            "location": "/ag/pm/pd/postwork_script/", 
            "text": "Postwork script are commonly used perform tasks after task is completed. This script may be useful like updating databases or generating documents by user entered data.\n\n\nBecause task is already completed some operations (example; trying to set action on current workitem) are invalid at this stage and error is thrown.\n\n\nPostwork script defined area is reached from related task. When you click on \nPostwork script\n button on the task, postwork script page will open.\n\n\nExample:\n\n\n\n\nIn postwork script following objects are available:\n\n\n$WorkItem\n\nCurrent workitem instance.\n\n\n$Xml\n\nXml data navigator for \ndata model\n.\n\n\n$Instance\n\nCurrent workflow instance.\n\n\n$Initiator\n\nInitiator of workflow instance.\n\n\n$TestMode\nA boolean value that specifies the current workflow instance is in test mode.\n\n\n$Priority\nA number value between 0 to 5 that specifies the priority of workflow instance.\n\n\n$Culture\nA string value that specifies the initiated culture of workflow instance. (Example: \nen\n or \nde\n or \ntr\n)\n\n\n$Localization\n\nTranslation dictionary that provides localized texts.\n\n\n$Database\n\nProvides methods to query relational database.\n\n\n$Membership\n\nProvides methods to access organization database.\n\n\n$Calendar\n\nProvides methods for time based calculations and working hours calendar.\n\n\n$XmlRepository\n\nProvides methods to query non-relational database.\n\n\n$Domain\nAllows to access domain preferences.\n\n\n$Services\nAllows to access defined web services.\n\n\n$Messages\n\nAllows to send email messages.\n\n\n$Crypto\nPerforms cryptographic and digital signature operations.\n\n\n$Delegation\n\nAllows to access user delegation library.\n\n\n$Files\n\nAllows to access file repository.\n\n\n$Documents\n\nAllows to access document repository. \n\n\nCommon operations\n\n\nUpdating data model by action\n\n\nAssign completion date to \nData Model\n if user selects \nApprove\n action.\n\n\n//Assign action\n\n\nif\n \n(\n \n$WorkItem\n.\nSelectedAction\n \n==\n \nApprove\n \n)\n \n{\n\n   \n$Xml\n.\nSetValue\n(\nApprovedAt\n,\n \n$WorkItem\n.\nEnd\n \n);\n\n\n}", 
            "title": "Postwork Script"
        }, 
        {
            "location": "/ag/pm/pd/postwork_script/#common-operations", 
            "text": "Updating data model by action  Assign completion date to  Data Model  if user selects  Approve  action.  //Assign action  if   (   $WorkItem . SelectedAction   ==   Approve   )   { \n    $Xml . SetValue ( ApprovedAt ,   $WorkItem . End   );  }", 
            "title": "Common operations"
        }, 
        {
            "location": "/ag/pm/pd/normal_tasks/", 
            "text": "Normal task are used to assign tasks on users. Every user task requires an role definition otherwise task is assigned to initiator of workflow instance.\n\n\nIn addition to \ncommon properties\n you can also configure the following properties for normal typed tasks;\n\n\nInstructions\n\nInstructions are for showing users descriptive text about a task. For example: \"Please review expense payment request.\" for approval task in workflow.\n\n\nInstructions can be written with \ndata template\n expressions to replace data from \ndata model\n.\n\n\nRole\n\nName of \nRoles\n, assigned to task. Tasks may share same roles if assigned to same users, If not specified task is assigned to initiator of workflow.\n\n\nOptions\n\nList of task options. Task options are provides quick accessible to following task properties:\n\n\n\n\nNotification\n\n\nFirst Reminder\n\n\nRepeating Reminder\n\n\nWatchers\n\n\n\n\nIf property enabled related icon is highlighted, task properties are not limited to options icons, Please use context menu to access more advanced properties.\n\n\nNotification\n\n\nConfigures the notification to be send at task when assigned to users. This notification is disabled by default. \n\n\nSend Notify Message\n\nCheck this field to send notification message.\n\n\nTemplate\n\nTemplate of notification. This option visible only when one or more \nmessage template\n defined.\n\n\nFirst Reminder\n\n\nAfter task is assigned, configures the reminder notification if task still is not completed. By default 30 minutes is set.\n\n\nDuration\n\nDuration of first reminder after task is assigned. Duration can be selected from list or can be manually entered in \nd.hh:mm:ss\n format. \n\n\nTemplate\n\nTemplate of reminder. This option visible only when one or more \nmessage template\n defined.\n\n\nRepeating Reminder\n\n\nAfter task is assigned or first reminder is sent, configures the repeating notification until task is complete. By default this notification is disabled.\n\n\nPlease use this property with caution, sending too much messages degrades the importance of notifications.\n\n\nDuration\n\nDuration of repeating reminders. Duration can be selected from list or can be manually entered in \nd.hh:mm:ss\n format. \n\n\nTemplate\n\nTemplate of reminder. This option visible only  when one or more \nmessage template\n are defined.\n\n\nDeadline\n\n\nConfigures the deadline time and action for assigned tasks to complete automatically.\n\n\nDuration\n\nDuration of deadline after task is assigned.  Duration can be selected from list or can be manually entered in \nd.hh:mm:ss\n format. Duration also can be set in \nprework script\n in more dynamic behavior.\n\n\nAction\n\nAction to be selected if deadline occurs. This option is not mandatory if auto completion of task is not requested.\n\n\nTemplate\n\nTemplate of notification message about deadline. This option only visible when one or more \nmessage template\n defined.\n\n\nWatchers\n\n\nConfigures the watcher role for assigned task. Watcher role is similar to role script they cannot perform any operation on task. Watched tasks are labelled with \nWatched\n label in user \nworklists\n and used for task notification and monitoring purposes.\n\n\nWatcher Role\n\nRole to assign as watcher.\n\n\nSend Notify Message\n\nCheck this field to send a notification message for watchers.\n\n\nTemplate\n\nTemplate of notification content. This option visible only when one or more \nmessage template\n are defined.\nForm\n\n\nConfigures the form to be show and form section states. If not specified task uses the default form from \npool\n settings but can be change at task level.", 
            "title": "Normal Tasks"
        }, 
        {
            "location": "/ag/pm/pd/normal_tasks/#notification", 
            "text": "Configures the notification to be send at task when assigned to users. This notification is disabled by default.   Send Notify Message \nCheck this field to send notification message.  Template \nTemplate of notification. This option visible only when one or more  message template  defined.", 
            "title": "Notification"
        }, 
        {
            "location": "/ag/pm/pd/normal_tasks/#first-reminder", 
            "text": "After task is assigned, configures the reminder notification if task still is not completed. By default 30 minutes is set.  Duration \nDuration of first reminder after task is assigned. Duration can be selected from list or can be manually entered in  d.hh:mm:ss  format.   Template \nTemplate of reminder. This option visible only when one or more  message template  defined.", 
            "title": "First Reminder"
        }, 
        {
            "location": "/ag/pm/pd/normal_tasks/#repeating-reminder", 
            "text": "After task is assigned or first reminder is sent, configures the repeating notification until task is complete. By default this notification is disabled.  Please use this property with caution, sending too much messages degrades the importance of notifications.  Duration \nDuration of repeating reminders. Duration can be selected from list or can be manually entered in  d.hh:mm:ss  format.   Template \nTemplate of reminder. This option visible only  when one or more  message template  are defined.", 
            "title": "Repeating Reminder"
        }, 
        {
            "location": "/ag/pm/pd/normal_tasks/#deadline", 
            "text": "Configures the deadline time and action for assigned tasks to complete automatically.  Duration \nDuration of deadline after task is assigned.  Duration can be selected from list or can be manually entered in  d.hh:mm:ss  format. Duration also can be set in  prework script  in more dynamic behavior.  Action \nAction to be selected if deadline occurs. This option is not mandatory if auto completion of task is not requested.  Template \nTemplate of notification message about deadline. This option only visible when one or more  message template  defined.", 
            "title": "Deadline"
        }, 
        {
            "location": "/ag/pm/pd/normal_tasks/#watchers", 
            "text": "Configures the watcher role for assigned task. Watcher role is similar to role script they cannot perform any operation on task. Watched tasks are labelled with  Watched  label in user  worklists  and used for task notification and monitoring purposes.  Watcher Role \nRole to assign as watcher.  Send Notify Message \nCheck this field to send a notification message for watchers.  Template \nTemplate of notification content. This option visible only when one or more  message template  are defined.\nForm  Configures the form to be show and form section states. If not specified task uses the default form from  pool  settings but can be change at task level.", 
            "title": "Watchers"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/", 
            "text": "Addition to \nnormal tasks\n process may contain module typed tasks to execute automated system tasks without involvement of any user interaction.\n\n\nModule type tasks are executed by workflow engine and does not appear on user's work lists.\n\n\nEach of module has a special behavior to fulfill process requirements and you can use the following module types in process diagram;\n\n\n\n\nSub Workflow\n\n\nWeb Service Producer\n\n\nAutomation\n\n\nEvent\n\n\nEvent Listener\n\n\n\n\nAutomation Module\n\n\nAutomation module typed tasks are used to execute scripts on process. Script may contain vary operations like updating database or data model.\n\n\nIn most cases automation script should take action by assign value to \n$WorkItem.SelectedAction\n property after is work is done. \n\n\nIn addition to common properties you can also configure the following properties for an automation task;\n\n\nScript\n\nContent of automation script.\n\n\nExample automation script\n\n\n$Xml.SetValue(\nCustomerCount\n, $Xml.EvaluateNumber(\nCustomerCount\n) + 1);\nif ( $Xml.EvaluateNumber(\nCustomerCount\n) \n 10\n \n)\n \n{\n\n  \n$\nWorkItem.SelectedAction =\n \nContinue\n;\n\n\n}\n \nelse\n \n{\n\n  \n$\nWorkItem.SelectedAction =\n \nCompleted\n;\n\n\n}\n\n\n\n\n\nStart Point\n\n\nAutomation module type tasks can be set as start point to initiate workflow instances as automated way.\n\n\nYou can initiate from module tasks with any of following scenarios;\n\n\nEvaluation\n\nYou can configure the evaluation schedule to periodically initiate workflow instances and take action. If module script does not take action, workflow instance is reverted.\n\n\nScripting Initiate\n\nYou may call the \nWorkItem.Initiate\n method to initiate from other processes.\n\n\nJoin State\n\n\nIf module is not set as start point and no action taken in script then workflow switches to join state to pause workflow instance at automation task and waits for indefinitely.\n\n\nWorkflow instance may continue with any of following scenarios;\n\n\nDeadline\n\nIf you assigned a deadline on task, workflow instance waits until deadline date occur and takes deadline action automatically to continue.\n\n\nEvaluation\n\nYou can configure the evaluation schedule to periodically check condition to continue or not.\n\n\nProcess Work Item\n\nYou may call the \nWorkItem.ProcessWorkItem\n method on other workflow instances to force module to continue.\n\n\nEvent Listener Module\n\n\nEvent listener module are used to wait for specific events or initiate new workflow instances when event is occurs. Events are triggered on domain scope and may receive events from other processes.\n\n\nIn addition to \ncommon properties\n you can also configure the following properties for an automation task;\n\n\nEvent Name\n\nName of event. Event name can set to a plain text value (Ex: Customer.New) or may contain \ndata template\n expressions to include data from data model. (Ex: \"PaymentComplete.{{Id}}\" )\n\n\nYou may also specify multiple event names with semicolon delimited format. (Ex: \"Customer.New;Customer.Update.{{Id}}\" )\n\n\nHandle Script\n\nScript to handle event and take action to continue workflow instance. If not set worfklow engine automatically selects the first action.\n\n\nAttached event data can be accessed with $Input variable as \nXmlNode\n instance.\n\n\nIf task configured as start point a new workflow instance is initiated and event data copied to current workflow \ndata model\n for name matching nodes. If handling script does not take any action workflow instance is reverted.\n\n\nIf task is not set as start point, workflow instance paused and waits until event is occurs. If handling script does not take any action then workflow instance continues to wait until next event occur.\n\n\nRemarks\n\n\nEvents are processed in synchronous behavior and if any exception occurs transaction is rollbacked.\n\n\nEvent Module\n\n\nEvent module is used to trigger an event to notify other listener type tasks about some specific event is occurs. Events are triggered on domain scope and may execute listeners in other processes.\n\n\nIn addition to \ncommon properties\n you can also configure the following properties for an automation task;\n\n\nEvent Name\n\nName of event. Event name can set to a plain text value (Ex: Customer.New) or may contain \ndata template\n expressions to include data from data model. (Ex: \"PaymentComplete.{{Id}}\" )\n\n\nYou may also specify multiple event names with semicolon delimited format. (Ex: \"Customer.New;Customer.Update.{{Id}}\" )\n\n\nEvent Data XPath\n\nXPath of event data to be passed to listeners. If set to empty value root element content is used. You can use $Input xml node variable to access related event data.\n\n\nHandle Script\n\nScript to handle event result and take action to continue workflow instance.\n\n\nIf no script defined first action is automatically selected.\n\n\nEvent results are stored in $Handlers named array of work item id numbers. If no listener exists array is empty.\n\n\nRemarks\n\n\nEvents are processed in synchronous behavior and if any exception occurs transaction is rollbacked.\n\n\nWeb Service Producer Module\n\n\nWeb Service Producer Module type tasks are used to expose task as web service endpoint to integrate with other external applications.\n\n\nWeb service definition (WSDL) is depend on \ndata model\n and can accessed from process toolbar from web interface or in following URL format;\n\n\nhttp(s)://\ndomain\n.workrunner.io/services/process/\nprocess id\n\n\nExample URL:\n \n\nhttp://mycompany.workrunner.io/services/process/1e95d0bb-80ab-467a-8421-83e73b339ed2\n\n\nWorkrunner uses Microsoft WCF infrastructure to host web services and compatible with industry standards.\n\n\nAuthentication\n\n\nService methods requires user and password information to impersonate as user. Authentication also requires client certificate authentication that uses self signed certificate for domain.\n\n\nIf service accessed from SSL connection basic authentication can be used. For more details please refer to \nhttps://msdn.microsoft.com/en-us/library/ms733775(v=vs.110).aspx\n \n\n\nIf no ssl used clear text authentication is supported but standard WCF implementation does not support this feature and requires additional custom binding to access web service. Example implementation can be found at \nhttp://webservices20.blogspot.com.tr/2008/11/introducing-wcf-clearusernamebinding.html\n\n\nSub Workflow\n\n\nSub workflow type tasks are useful for starting a new instance from the same process. Main and the sub workflows use the same XML. When this option is selected on the module page, a form comes to hand, consisting of the options below.\n\n\nPool\n\n\nSelect a pool to trigger a task (sub workflow) from.\n\n\nTask\n\n\nWhen pool is selected, its tasks are listed in this dropdown. Select one to trigger.\n\n\nMode\n\n\nThere are 3 options listed in the dropdown; \n\n\nCreate child instances and continue\n\nWith this option, after the sub workflows are created, the main workflow continues to the next task(s).\n\n\nSynchronize child instances and continue\n\nIf you choose this option, the sub workflows created can be synchronized by the main workflow. With this synchronization, whenever the main workflow's parent task is visited again, all related sub workflows can be updated according to the XML. For example assume that you created 2 sub workflows and then deleted one of them from the XML. When main workflow returns to that creator task, the sub workflow related with the one that was deleted from the XML will be terminated.\n\n\nWait for all childs to complete\n\nAll of the sub workflows must be completed in order for the main workflow to continue to next task(s). Until all its children is completed, main task waits on Join state.\n\n\nXPath\n\n\nUse this text box to specify the node name to be regarded to create the sub workflows with.\n\n\nCondition\n\n\nYou can indicate a condition to specialize the node selected on the previous option.\n\n\nRow Id XPath\n\n\nIf you are going to use the synchronize mode, write the name of your Id node which is located under your XPath, in order it to be checked to update the sub workflows properly.\n\n\nSync Data XPath\n\n\nIf you wrote down a row id xpath above but yet it is not enough to indicate the updated sub workflow's data on the XML, specify another node for synchronization. For example if one of your sub workflows has a AssignedTo node in its XML which holds the assignee information, changing this assignee information to someone else might have an effect on the related subworkflow, like to reassign the task to the new person.", 
            "title": "Module Tasks"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#automation-module", 
            "text": "Automation module typed tasks are used to execute scripts on process. Script may contain vary operations like updating database or data model.  In most cases automation script should take action by assign value to  $WorkItem.SelectedAction  property after is work is done.   In addition to common properties you can also configure the following properties for an automation task;  Script \nContent of automation script.  Example automation script  $Xml.SetValue( CustomerCount , $Xml.EvaluateNumber( CustomerCount ) + 1);\nif ( $Xml.EvaluateNumber( CustomerCount )   10   )   { \n   $ WorkItem.SelectedAction =   Continue ;  }   else   { \n   $ WorkItem.SelectedAction =   Completed ;  }", 
            "title": "Automation Module"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#start-point", 
            "text": "Automation module type tasks can be set as start point to initiate workflow instances as automated way.  You can initiate from module tasks with any of following scenarios;  Evaluation \nYou can configure the evaluation schedule to periodically initiate workflow instances and take action. If module script does not take action, workflow instance is reverted.  Scripting Initiate \nYou may call the  WorkItem.Initiate  method to initiate from other processes.", 
            "title": "Start Point"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#join-state", 
            "text": "If module is not set as start point and no action taken in script then workflow switches to join state to pause workflow instance at automation task and waits for indefinitely.  Workflow instance may continue with any of following scenarios;  Deadline \nIf you assigned a deadline on task, workflow instance waits until deadline date occur and takes deadline action automatically to continue.  Evaluation \nYou can configure the evaluation schedule to periodically check condition to continue or not.  Process Work Item \nYou may call the  WorkItem.ProcessWorkItem  method on other workflow instances to force module to continue.", 
            "title": "Join State"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#event-listener-module", 
            "text": "Event listener module are used to wait for specific events or initiate new workflow instances when event is occurs. Events are triggered on domain scope and may receive events from other processes.  In addition to  common properties  you can also configure the following properties for an automation task;  Event Name \nName of event. Event name can set to a plain text value (Ex: Customer.New) or may contain  data template  expressions to include data from data model. (Ex: \"PaymentComplete.{{Id}}\" )  You may also specify multiple event names with semicolon delimited format. (Ex: \"Customer.New;Customer.Update.{{Id}}\" )  Handle Script \nScript to handle event and take action to continue workflow instance. If not set worfklow engine automatically selects the first action.  Attached event data can be accessed with $Input variable as  XmlNode  instance.  If task configured as start point a new workflow instance is initiated and event data copied to current workflow  data model  for name matching nodes. If handling script does not take any action workflow instance is reverted.  If task is not set as start point, workflow instance paused and waits until event is occurs. If handling script does not take any action then workflow instance continues to wait until next event occur.", 
            "title": "Event Listener Module"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#remarks", 
            "text": "Events are processed in synchronous behavior and if any exception occurs transaction is rollbacked.", 
            "title": "Remarks"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#event-module", 
            "text": "Event module is used to trigger an event to notify other listener type tasks about some specific event is occurs. Events are triggered on domain scope and may execute listeners in other processes.  In addition to  common properties  you can also configure the following properties for an automation task;  Event Name \nName of event. Event name can set to a plain text value (Ex: Customer.New) or may contain  data template  expressions to include data from data model. (Ex: \"PaymentComplete.{{Id}}\" )  You may also specify multiple event names with semicolon delimited format. (Ex: \"Customer.New;Customer.Update.{{Id}}\" )  Event Data XPath \nXPath of event data to be passed to listeners. If set to empty value root element content is used. You can use $Input xml node variable to access related event data.  Handle Script \nScript to handle event result and take action to continue workflow instance.  If no script defined first action is automatically selected.  Event results are stored in $Handlers named array of work item id numbers. If no listener exists array is empty.", 
            "title": "Event Module"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#remarks_1", 
            "text": "Events are processed in synchronous behavior and if any exception occurs transaction is rollbacked.", 
            "title": "Remarks"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#web-service-producer-module", 
            "text": "Web Service Producer Module type tasks are used to expose task as web service endpoint to integrate with other external applications.  Web service definition (WSDL) is depend on  data model  and can accessed from process toolbar from web interface or in following URL format;  http(s):// domain .workrunner.io/services/process/ process id  Example URL:   http://mycompany.workrunner.io/services/process/1e95d0bb-80ab-467a-8421-83e73b339ed2  Workrunner uses Microsoft WCF infrastructure to host web services and compatible with industry standards.", 
            "title": "Web Service Producer Module"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#authentication", 
            "text": "Service methods requires user and password information to impersonate as user. Authentication also requires client certificate authentication that uses self signed certificate for domain.  If service accessed from SSL connection basic authentication can be used. For more details please refer to  https://msdn.microsoft.com/en-us/library/ms733775(v=vs.110).aspx    If no ssl used clear text authentication is supported but standard WCF implementation does not support this feature and requires additional custom binding to access web service. Example implementation can be found at  http://webservices20.blogspot.com.tr/2008/11/introducing-wcf-clearusernamebinding.html", 
            "title": "Authentication"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#sub-workflow", 
            "text": "Sub workflow type tasks are useful for starting a new instance from the same process. Main and the sub workflows use the same XML. When this option is selected on the module page, a form comes to hand, consisting of the options below.", 
            "title": "Sub Workflow"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#pool", 
            "text": "Select a pool to trigger a task (sub workflow) from.", 
            "title": "Pool"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#task", 
            "text": "When pool is selected, its tasks are listed in this dropdown. Select one to trigger.", 
            "title": "Task"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#mode", 
            "text": "There are 3 options listed in the dropdown;   Create child instances and continue \nWith this option, after the sub workflows are created, the main workflow continues to the next task(s).  Synchronize child instances and continue \nIf you choose this option, the sub workflows created can be synchronized by the main workflow. With this synchronization, whenever the main workflow's parent task is visited again, all related sub workflows can be updated according to the XML. For example assume that you created 2 sub workflows and then deleted one of them from the XML. When main workflow returns to that creator task, the sub workflow related with the one that was deleted from the XML will be terminated.  Wait for all childs to complete \nAll of the sub workflows must be completed in order for the main workflow to continue to next task(s). Until all its children is completed, main task waits on Join state.", 
            "title": "Mode"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#xpath", 
            "text": "Use this text box to specify the node name to be regarded to create the sub workflows with.", 
            "title": "XPath"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#condition", 
            "text": "You can indicate a condition to specialize the node selected on the previous option.", 
            "title": "Condition"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#row-id-xpath", 
            "text": "If you are going to use the synchronize mode, write the name of your Id node which is located under your XPath, in order it to be checked to update the sub workflows properly.", 
            "title": "Row Id XPath"
        }, 
        {
            "location": "/ag/pm/pd/module_tasks/#sync-data-xpath", 
            "text": "If you wrote down a row id xpath above but yet it is not enough to indicate the updated sub workflow's data on the XML, specify another node for synchronization. For example if one of your sub workflows has a AssignedTo node in its XML which holds the assignee information, changing this assignee information to someone else might have an effect on the related subworkflow, like to reassign the task to the new person.", 
            "title": "Sync Data XPath"
        }, 
        {
            "location": "/ag/pm/pd/actions/", 
            "text": "Actions are result of a \nTask \n and redirect workflows to next step.\n\n\n\n\nDepending on task type, actions can be selected by users or automated scripting operations. When an action is taken on task, Workrunner process engine continues to next step in workflow.\n\n\nFor a action you can configure following;\n\n\nName\n (Not visible in diagram)\n\nName of action. Name information are not visible to users and used to identify task.\n\n\nCaption\n\nCaption of action. Captions are shown to users and can be localized when needed. \n\n\nIs Hidden?\n\nCheck this field to hide action from users. Hiding an action may be useful for temporary disabling action or selecting as deadline action to escalate task.\n\n\nFollow Action\n\nCheck this field to follow action result. Following action result checks the next step in workflow is assigned to same user, if same user assigned automatically opens the next task without redirecting to user \nwork list\n.\n\n\nValidation Group\n\nName of validation rule groups. Use semicolon \";\" to specify multiple groups. If any rule in this group fails action cannot be selected.\n\n\nRequire Comment?\n\nCheck this field to request mandatory comment from user. In some cases like rejecting a form, you can force the user for specifying a reject reason.\n\n\nOrder\n\nA number value used for ordering actions within other actions. Higher values put action to last.\n\n\nFor a action you can configure also following properties to change appearance from context menu: \n\n\nClick right mouse button on the action, action design pop-up will open. Click on appearance title, start to change the action properties. \n\n\nIcon\n\nSelect icon to show user. \n\n\nColor\n\nSelect text color of action caption.\n\n\nBackground Color\n\nSelect background color of action caption.\n\n\nConfirmation Message\n\nEnter confirmation message to show user when action is selected. If not specified \"Are you sure you want to select the action \n ?\" text is displayed.\n ## Auto Select Script\n\n\nScripting based rule to auto select action. This script is useful when skip tasks without assign to users by certain conditions. For example auto select approve action when expense amount field is less than $100 \n.\n\n\n$Xml\n.\nEvaluateNumber\n(\nTotalAmount\n)\n \n \n100\n\n\n\n\n\nUser Select Script\n\n\nScript to execute just after action is selected. This script is useful for performing operations after action is selected.\n\n\nThis script is different from postwork because it runs on client side and it has user context. For example applying digital signature on file attachment.\n\n\nSign File Attachment\n\n\nvar\n \nformat\n \n=\n \nX\n;\n \n// X value is is default. BES, T, C, X, A values also can be used.\n\n\n\nWorkrunner\n.\nSignature\n.\nsignFiles\n(\n$Xml\n.\nSelectAll\n(\nFiles/File\n),\n \nformat\n).\nthen\n(\nfunction\n(\nresult\n)\n \n{\n\n\n    \nif\n \n(\nresult\n)\n \n{\n\n        \n// result.certificateName contains the name of signer\n\n        \n// result.certificateIssuer contains the issuer of signer certificate\n\n        \n// result.certificateSerialNumber contains the serial number of signer\n\n        \n// result.files.forEach(function(file) {\n\n            \n// file.sourceId contains source file id.\n\n        \n// });\n\n    \n}\n\n\n    \n$Complete\n(\n!!\nresult\n);\n\n\n});\n\n\n\n\n\nSigning basic plain text and fetching the signature file.\n\n\nWorkrunner\n.\nSignature\n.\nsignText\n(\nHello !\n,\n \ntrue\n,\n \nBES\n).\nthen\n(\nfunction\n(\nresult\n)\n \n{\n\n\n    \nif\n \n(\nresult\n)\n \n{\n\n        \n// result.certificateName contains the name of signer\n\n        \n// result.certificateIssuer contains the issuer of signer certificate\n\n        \n// result.certificateSerialNumber contains the serial number of signer\n\n        \n// result.files.forEach(function(file) {\n\n            \n// file.id contains the signature file id.\n\n        \n// });\n\n    \n}\n\n\n    \n$Complete\n(\n!!\nresult\n);\n\n\n});", 
            "title": "Actions"
        }, 
        {
            "location": "/ag/pm/pd/actions/#user-select-script", 
            "text": "Script to execute just after action is selected. This script is useful for performing operations after action is selected.  This script is different from postwork because it runs on client side and it has user context. For example applying digital signature on file attachment.  Sign File Attachment  var   format   =   X ;   // X value is is default. BES, T, C, X, A values also can be used.  Workrunner . Signature . signFiles ( $Xml . SelectAll ( Files/File ),   format ). then ( function ( result )   { \n\n     if   ( result )   { \n         // result.certificateName contains the name of signer \n         // result.certificateIssuer contains the issuer of signer certificate \n         // result.certificateSerialNumber contains the serial number of signer \n         // result.files.forEach(function(file) { \n             // file.sourceId contains source file id. \n         // }); \n     } \n\n     $Complete ( !! result );  });   Signing basic plain text and fetching the signature file.  Workrunner . Signature . signText ( Hello ! ,   true ,   BES ). then ( function ( result )   { \n\n     if   ( result )   { \n         // result.certificateName contains the name of signer \n         // result.certificateIssuer contains the issuer of signer certificate \n         // result.certificateSerialNumber contains the serial number of signer \n         // result.files.forEach(function(file) { \n             // file.id contains the signature file id. \n         // }); \n     } \n\n     $Complete ( !! result );  });", 
            "title": "User Select Script"
        }, 
        {
            "location": "/ag/pm/pd/roles/", 
            "text": "Roles are definition of who will be responsible for task. \n\n\nFor a role you can configure following:\n\n\nName\n\nName of role to identify.\n\n\nCaption\n\nCaption of role. Captions are shown to to users and can be localized when needed.\n\n\nRole Wizard\n\n\nRole Script\n\n\nScript that returns list of responsible persons.  \n\n\n\n\nInfo\n\n\nRole scripts requires at least one identity to continue. If role script is not empty and does not return any identity, emakin produces an error.\n\n\n\n\nExample Role Scripts\n\n\nRole script has a wizard to quickly build common used role definitions but can you use following example scripts if needed.\n\n\nAssign to specific identity.\n\nId number of identity can be specified from role wizard with selecting identity option.\n\n\n$Membership.Get(\nd3b1fe89-6873-4438-8762-164ed73a9054\n);\n\n\n\n\n\nAssign by Data Model field\n\nAssume data field has an \"Employee\" field which is filled by user form.\n\n\n$Xml.Evaluate(\nEmployee\n);\n\n\n\n\n\nAssign Multiple Users\n\nUsing a java script array, allows assigning multiple users.\n\n\n[ $Xml.Evaluate(\nEmployee\n), $Membership.Get(\nd3b1fe89-6873-4438-8762-164ed73a9054\n) ]\n\n\n\n\n\nAlternatively you can use semicolon to specify multiple users. \n\n\n$Xml.Evaluate(\nEmployee\n) + \n;\n + \nd3b1fe89-6873-4438-8762-164ed73a9054\n\n\n\n\n\n\nIdentity\n\n\nIdentity option is determined responsible person from the organization data. \n\n\n\n\nSearch person name in to identity field and click on name.\n\n\nWhen person name come to screen at the same time person identity code will appear in the role script field.\n\n\n\n\n\n\nData\n\n\nData option is assigned role from any data in the process.\n\n\n\n\nEnter the data word in to data field. You will see data code in the role script field.\n\n\n\n\nFind Manager\n\n\nFind manager consists two option, data and previous task.\n\n\n\n\nData option is assigned role from any data in the process. You will see data code in the role script field.\n\n\nPrevious task is assigned role from previous task. You will see previous task code in the role script field.", 
            "title": "Roles"
        }, 
        {
            "location": "/ag/pm/pd/roles/#role-wizard", 
            "text": "", 
            "title": "Role Wizard"
        }, 
        {
            "location": "/ag/pm/pd/roles/#role-script", 
            "text": "Script that returns list of responsible persons.     Info  Role scripts requires at least one identity to continue. If role script is not empty and does not return any identity, emakin produces an error.   Example Role Scripts  Role script has a wizard to quickly build common used role definitions but can you use following example scripts if needed.  Assign to specific identity. \nId number of identity can be specified from role wizard with selecting identity option.  $Membership.Get( d3b1fe89-6873-4438-8762-164ed73a9054 );  Assign by Data Model field \nAssume data field has an \"Employee\" field which is filled by user form.  $Xml.Evaluate( Employee );  Assign Multiple Users \nUsing a java script array, allows assigning multiple users.  [ $Xml.Evaluate( Employee ), $Membership.Get( d3b1fe89-6873-4438-8762-164ed73a9054 ) ]  Alternatively you can use semicolon to specify multiple users.   $Xml.Evaluate( Employee ) +  ;  +  d3b1fe89-6873-4438-8762-164ed73a9054", 
            "title": "Role Script"
        }, 
        {
            "location": "/ag/pm/pd/roles/#identity", 
            "text": "Identity option is determined responsible person from the organization data.    Search person name in to identity field and click on name.  When person name come to screen at the same time person identity code will appear in the role script field.", 
            "title": "Identity"
        }, 
        {
            "location": "/ag/pm/pd/roles/#data", 
            "text": "Data option is assigned role from any data in the process.   Enter the data word in to data field. You will see data code in the role script field.", 
            "title": "Data"
        }, 
        {
            "location": "/ag/pm/pd/roles/#find-manager", 
            "text": "Find manager consists two option, data and previous task.   Data option is assigned role from any data in the process. You will see data code in the role script field.  Previous task is assigned role from previous task. You will see previous task code in the role script field.", 
            "title": "Find Manager"
        }, 
        {
            "location": "/ag/pm/pd/routes/", 
            "text": "Routes are links between \nActions\n and \nTasks\n to build relation within process diagram.\n\n\n\n\nFor a route you can configure following properties from context menu:\n\n\nInstructions\n\nIf specified replaces next task instructions with entered instruction. This property is useful when override the \ndefault task instruction\n. For example an \nReject\n action may change next task instructions with approve task.\n\n\nValidation Rule\n\nValidation script rule to allow from route. If not specified route always valid.\n\n\nYou can draw more than one route to different tasks or same task and control workflow direction.\n\n\nIf no valid route found workflow is automatically terminates.\n\n\nSample Validation Rule\n\n\nValidate By Data Model\n\n\nFollowing rule allows route, only if total amount is greater than $100. \n\n\n$Xml.EvaluateNumber(\nTotalAmount\n) \n 100;", 
            "title": "Routes"
        }, 
        {
            "location": "/ag/pm/pd/routes/#sample-validation-rule", 
            "text": "", 
            "title": "Sample Validation Rule"
        }, 
        {
            "location": "/ag/pm/pd/routes/#validate-by-data-model", 
            "text": "Following rule allows route, only if total amount is greater than $100.   $Xml.EvaluateNumber( TotalAmount )   100;", 
            "title": "Validate By Data Model"
        }, 
        {
            "location": "/ag/pm/pd/message_templates/", 
            "text": "Message templates are list of templates to be used in notifications like task assignment or reminders. By default Workrunner uses predefined templates but message contents can be customized by creating a message template. For more information please refer to \ndata templates\n. \n\n\nThe following steps describes to create message templates in the Workrunner.\n\n\n\n\nTo open templates step in the pool. Click \nAdd New Template\n button, message templates design pop-up will open.\n\n\nEnter the following information.\n\n\n\n\nName\n\nName of  message template.\n\n\nSubject\n\nSubject of message template.\n\n\nType\n\nType of message template.\n\n\n\n\nStandart type is utilized to create content of written.\n\n\nXSLT type is utilized to create content of  xml.\n\n\n\n\nClick on \nDone\n button, edit and details button will appear below the form name. Details button is used for design message content.\n\n\nStandart Type:\n\nIf standart type is chosen, content area will open on the same page. Message template consists from text and form special field. \n\n\nWe will analysis the following screen content:\n\n\n\n\nDear is message of initiation word.\n\n\nIdentity is a field on the form. We want to bring data of identity from form into message. Before we find to identity under which title. \n\n\nOwner is title of identity.\n\n\nStart with two curly braces, enter \"Owner\" name and add a slash, enter \"Identity\" name and add two curly braces.\n\n\n\n\n\n\n\n\nClick on html button, message template text will transform to html format. \n\n\n\n\n\n\n\n\nClick Details button under the form name to close window.\n\n\n\n\nWhen the process runs, message will go to users' e-mail address. \n\n\nExample message in an e-mail:\n\n\n\n\nXSLT Type:\n\nIf XSLT type is chosen, content area will open on the same page. Message template consists of xml content.\n\n\nYou can use default templates or can create new templates.\n\n\nDefined templates can be also used in scripting. For more information please refer to \n$Templates\n page.\n\n\nDefault Templates\n\n\nBy default Workrunner uses following templates that stored in \"configuration/messagetemplates.xml\" file:\nTask Notification\n\n\nhtml\n\n\nbody\n \nstyle\n=\nmargin:0; padding:0\n\n \ndiv\n \nstyle\n=\nmargin:1em\n\n  \np\nb\n{{ $Recipients }}\n/\nb\n,\n/\np\n\n  \np\nYou have a new task named {{ $WorkItem.Caption }}.\n/\np\n\n  \np\n\n   \na\n \nstyle\n=\ndisplay:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;\n \nhref\n=\n{{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }}\n{{ $WorkItem.Caption }}\n/\na\n\n  \n/\np\n\n  \np\n{{ $WorkItem.Instructions }}\n/\np\n\n  \np\nu\nDetails\n/\nu\n\n   \nbr\n/\nbr\n\n   \nb\nForm number\n/\nb\n {{ $Instance.Number }},\nbr\n/\nbr\n\n   {{ if $WorkItem.DeadlineDate then \nb\nDeadline date\n/\nb\n {{ $WorkItem.DeadlineDate }} }}\n  \n/\np\n\n \n/\ndiv\n\n \ndiv\n \nstyle\n=\nmargin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666\n\n  \na\n \nhref\n=\n{{ $DomainUrl }}/\n\n   \nimg\n \nsrc\n=\n{{ $LogoUrl }}\n \nborder\n=\n0\n/\nimg\n\n  \n/\na\n\n \n/\ndiv\n\n\n/\nbody\n\n\n/\nhtml\n\n\n\n\n\nFirst Reminder\n\n\nhtml\n\n\nbody\n \nstyle\n=\nmargin:0; padding:0\n\n \ndiv\n \nstyle\n=\nmargin:1em\n\n  \np\nb\n{{ $Recipients }}\n/\nb\n,\n/\np\n\n  \np\n{{ $WorkItem.Caption }} still waiting in your task list. Please review.\n/\np\n\n  \np\n\n   \na\n \nstyle\n=\ndisplay:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;\n \nhref\n=\n{{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }}\n{{ $WorkItem.Caption }}\n/\na\n\n  \n/\np\n\n  \np\n{{ $WorkItem.Instructions }}\n/\np\n\n  \np\nu\nDetails\n/\nu\n\n   \nbr\n/\nbr\n\n   \nb\nForm number\n/\nb\n {{ $Instance.Number }},\nbr\n/\nbr\n\n   {{ if $WorkItem.DeadlineDate then \nb\nDeadline date\n/\nb\n {{ $WorkItem.DeadlineDate }} }}\n  \n/\np\n\n \n/\ndiv\n\n \ndiv\n \nstyle\n=\nmargin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666\n\n  \na\n \nhref\n=\n{{ $DomainUrl }}/\n\n   \nimg\n \nsrc\n=\n{{ $LogoUrl }}\n \nborder\n=\n0\n/\nimg\n\n  \n/\na\n\n \n/\ndiv\n\n\n/\nbody\n\n\n/\nhtml\n\n\n\n\nRepeating Reminder\n\n\nhtml\n\n\nbody\n \nstyle\n=\nmargin:0; padding:0\n\n \ndiv\n \nstyle\n=\nmargin:1em\n\n  \np\nb\n{{ $Recipients }}\n/\nb\n,\n/\np\n\n  \np\n{{ $WorkItem.Caption }} still waiting in your task list. Please review.\n/\np\n\n  \np\n\n   \na\n \nstyle\n=\ndisplay:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;\n \nhref\n=\n{{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }}\n{{ $WorkItem.Caption }}\n/\na\n\n  \n/\np\n\n  \np\n{{ $WorkItem.Instructions }}\n/\np\n\n  \np\nu\nDetails\n/\nu\n\n   \nbr\n/\nbr\n\n   \nb\nForm number\n/\nb\n {{ $Instance.Number }},\nbr\n/\nbr\n\n   {{ if $WorkItem.DeadlineDate then \nb\nDeadline date\n/\nb\n {{ $WorkItem.DeadlineDate }} }}\n\n/\np\n\n \n/\ndiv\n\n \ndiv\n \nstyle\n=\nmargin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666\n\n  \na\n \nhref\n=\n{{ $DomainUrl }}/\n\n   \nimg\n \nsrc\n=\n{{ $LogoUrl }}\n \nborder\n=\n0\n/\nimg\n\n  \n/\na\n\n \n/\ndiv\n\n\n/\nbody\n\n\n/\nhtml\n\nDeadline\n\nhtml\n\n\nbody\n \nstyle\n=\nmargin:0; padding:0\n\n \ndiv\n \nstyle\n=\nmargin:1em\n\n  \np\nb\n{{ $Recipients }}\n/\nb\n,\n/\np\n\n  \np\nYour {{ $WorkItem.Caption }} task is deadlined and automatically closed.\n/\np\n\n  \np\n\n   \na\n \nstyle\n=\ndisplay:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;\n \nhref\n=\n{{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }}\n{{ $WorkItem.Caption }}\n/\na\n\n  \n/\np\n\n  \np\nu\nDetails\n/\nu\n\n   \nbr\n/\nbr\n\n   \nb\nForm number\n/\nb\n {{ $Instance.Number }},\nbr\n/\nbr\n\n  \n/\np\n\n \n/\ndiv\n\n \ndiv\n \nstyle\n=\nmargin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666\n\n  \na\n \nhref\n=\n{{ $DomainUrl }}/\n\n   \nimg\n \nsrc\n=\n{{ $LogoUrl }}\n \nborder\n=\n0\n/\nimg\n\n  \n/\na\n\n \n/\ndiv\n\n\n/\nbody\n\n\n/\nhtml\n\n\n\n\nWatch\n\n\nhtml\n\n\nbody\n \nstyle\n=\nmargin:0; padding:0\n\n \ndiv\n \nstyle\n=\nmargin:1em\n\n  \np\nb\n{{ $Recipients }}\n/\nb\n,\n/\np\n\n  \np\nA new {{ $WorkItem.Caption }} task assigned to {{ $AssignedTo }}. This email is been sent for your information and you can find task in your watch list later.\n/\np\n\n  \np\n\n   \na\n \nstyle\n=\ndisplay:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;\n \nhref\n=\n{{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }}\n{{ $WorkItem.Caption }}\n/\na\n\n  \n/\np\n\n  \np\n{{ $WorkItem.Instructions }}\n/\np\n\n  \np\nu\nDetails\n/\nu\n\n   \nbr\n/\nbr\n\n   \nb\nForm number\n/\nb\n {{ $Instance.Number }},\nbr\n/\nbr\n\n   {{ if $WorkItem.DeadlineDate then \nb\nDeadline date\n/\nb\n {{ $WorkItem.DeadlineDate }} }}\n  \n/\np\n\n \n/\ndiv\n\n \ndiv\n \nstyle\n=\nmargin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666\n\n  \na\n \nhref\n=\n{{ $DomainUrl }}/\n\n   \nimg\n \nsrc\n=\n{{ $LogoUrl }}\n \nborder\n=\n0\n/\nimg\n\n  \n/\na\n\n \n/\ndiv\n\n\n/\nbody\n\n\n/\nhtml\n\n\n\n\n\n\nInfo\n\n\nBecause of mail client notifications do not include any external link (except images) to resources like style sheets or scripts. Otherwise mail client may refuse to load resources because of security and privacy.\n\n\n\n\nXSLT\n\n\nUses industry standard XSLT format but requires some technical skills. For more information please refer to \nhttps://www.google.com/search?q=xslt", 
            "title": "Message Templates"
        }, 
        {
            "location": "/ag/pm/pd/message_templates/#default-templates", 
            "text": "By default Workrunner uses following templates that stored in \"configuration/messagetemplates.xml\" file:\nTask Notification  html  body   style = margin:0; padding:0 \n  div   style = margin:1em \n   p b {{ $Recipients }} / b , / p \n   p You have a new task named {{ $WorkItem.Caption }}. / p \n   p \n    a   style = display:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;   href = {{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }} {{ $WorkItem.Caption }} / a \n   / p \n   p {{ $WorkItem.Instructions }} / p \n   p u Details / u \n    br / br \n    b Form number / b  {{ $Instance.Number }}, br / br \n   {{ if $WorkItem.DeadlineDate then  b Deadline date / b  {{ $WorkItem.DeadlineDate }} }}\n   / p \n  / div \n  div   style = margin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666 \n   a   href = {{ $DomainUrl }}/ \n    img   src = {{ $LogoUrl }}   border = 0 / img \n   / a \n  / div  / body  / html   First Reminder  html  body   style = margin:0; padding:0 \n  div   style = margin:1em \n   p b {{ $Recipients }} / b , / p \n   p {{ $WorkItem.Caption }} still waiting in your task list. Please review. / p \n   p \n    a   style = display:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;   href = {{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }} {{ $WorkItem.Caption }} / a \n   / p \n   p {{ $WorkItem.Instructions }} / p \n   p u Details / u \n    br / br \n    b Form number / b  {{ $Instance.Number }}, br / br \n   {{ if $WorkItem.DeadlineDate then  b Deadline date / b  {{ $WorkItem.DeadlineDate }} }}\n   / p \n  / div \n  div   style = margin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666 \n   a   href = {{ $DomainUrl }}/ \n    img   src = {{ $LogoUrl }}   border = 0 / img \n   / a \n  / div  / body  / html   Repeating Reminder  html  body   style = margin:0; padding:0 \n  div   style = margin:1em \n   p b {{ $Recipients }} / b , / p \n   p {{ $WorkItem.Caption }} still waiting in your task list. Please review. / p \n   p \n    a   style = display:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;   href = {{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }} {{ $WorkItem.Caption }} / a \n   / p \n   p {{ $WorkItem.Instructions }} / p \n   p u Details / u \n    br / br \n    b Form number / b  {{ $Instance.Number }}, br / br \n   {{ if $WorkItem.DeadlineDate then  b Deadline date / b  {{ $WorkItem.DeadlineDate }} }} / p \n  / div \n  div   style = margin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666 \n   a   href = {{ $DomainUrl }}/ \n    img   src = {{ $LogoUrl }}   border = 0 / img \n   / a \n  / div  / body  / html \nDeadline html  body   style = margin:0; padding:0 \n  div   style = margin:1em \n   p b {{ $Recipients }} / b , / p \n   p Your {{ $WorkItem.Caption }} task is deadlined and automatically closed. / p \n   p \n    a   style = display:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;   href = {{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }} {{ $WorkItem.Caption }} / a \n   / p \n   p u Details / u \n    br / br \n    b Form number / b  {{ $Instance.Number }}, br / br \n   / p \n  / div \n  div   style = margin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666 \n   a   href = {{ $DomainUrl }}/ \n    img   src = {{ $LogoUrl }}   border = 0 / img \n   / a \n  / div  / body  / html   Watch  html  body   style = margin:0; padding:0 \n  div   style = margin:1em \n   p b {{ $Recipients }} / b , / p \n   p A new {{ $WorkItem.Caption }} task assigned to {{ $AssignedTo }}. This email is been sent for your information and you can find task in your watch list later. / p \n   p \n    a   style = display:inline-block; padding:5px; border:outset 1px; background-color: #D7DEF0; text-decoration:none;   href = {{ $DomainUrl }}/app/?/workitem/{{ $WorkItem.Id }} {{ $WorkItem.Caption }} / a \n   / p \n   p {{ $WorkItem.Instructions }} / p \n   p u Details / u \n    br / br \n    b Form number / b  {{ $Instance.Number }}, br / br \n   {{ if $WorkItem.DeadlineDate then  b Deadline date / b  {{ $WorkItem.DeadlineDate }} }}\n   / p \n  / div \n  div   style = margin:0 0 0 0; padding:0.5em 0 0.5em 1em;background-color:#666 \n   a   href = {{ $DomainUrl }}/ \n    img   src = {{ $LogoUrl }}   border = 0 / img \n   / a \n  / div  / body  / html    Info  Because of mail client notifications do not include any external link (except images) to resources like style sheets or scripts. Otherwise mail client may refuse to load resources because of security and privacy.", 
            "title": "Default Templates"
        }, 
        {
            "location": "/ag/pm/pd/message_templates/#xslt", 
            "text": "Uses industry standard XSLT format but requires some technical skills. For more information please refer to  https://www.google.com/search?q=xslt", 
            "title": "XSLT"
        }, 
        {
            "location": "/ag/pm/data_model/", 
            "text": "", 
            "title": "Data Model"
        }, 
        {
            "location": "/ag/pm/xpath/", 
            "text": "", 
            "title": "XPath and XQuery"
        }, 
        {
            "location": "/ag/pm/fo/forms_overview/", 
            "text": "", 
            "title": "Forms Overview"
        }, 
        {
            "location": "/ag/pm/fo/controls_toc/", 
            "text": "", 
            "title": "Controls TOC"
        }, 
        {
            "location": "/ag/pm/fo/column/", 
            "text": "", 
            "title": "Column"
        }, 
        {
            "location": "/ag/pm/fo/text_box/", 
            "text": "", 
            "title": "Text Box"
        }, 
        {
            "location": "/ag/pm/fo/date_time/", 
            "text": "", 
            "title": "Date Time"
        }, 
        {
            "location": "/ag/pm/fo/check_box/", 
            "text": "", 
            "title": "Check Box"
        }, 
        {
            "location": "/ag/pm/fo/radio_list/", 
            "text": "", 
            "title": "Radio List"
        }, 
        {
            "location": "/ag/pm/fo/identity_picker/", 
            "text": "", 
            "title": "Identity Picker"
        }, 
        {
            "location": "/ag/pm/fo/file/", 
            "text": "", 
            "title": "File"
        }, 
        {
            "location": "/ag/pm/fo/dropdown_content/", 
            "text": "", 
            "title": "Dropdown Content"
        }, 
        {
            "location": "/ag/pm/fo/expression_content/", 
            "text": "", 
            "title": "Expression Content"
        }, 
        {
            "location": "/ag/pm/fo/tag_list/", 
            "text": "", 
            "title": "Tag List"
        }, 
        {
            "location": "/ag/pm/fo/database_query/", 
            "text": "", 
            "title": "Database Query"
        }, 
        {
            "location": "/ag/pm/fo/static_list_items/", 
            "text": "", 
            "title": "Static List Items"
        }, 
        {
            "location": "/ag/pm/fo/xml_database_query/", 
            "text": "", 
            "title": "Xml Database Query"
        }, 
        {
            "location": "/ag/pm/fo/form_data_query/", 
            "text": "", 
            "title": "Form Data Query"
        }, 
        {
            "location": "/ag/pm/fo/web_service_query/", 
            "text": "", 
            "title": "Web Service Query"
        }, 
        {
            "location": "/ag/pm/fo/content_types/", 
            "text": "", 
            "title": "Content Types"
        }, 
        {
            "location": "/ag/pm/fo/activity_stream_design/", 
            "text": "", 
            "title": "Activity Stream Design"
        }, 
        {
            "location": "/ag/pm/fo/static_panel/", 
            "text": "", 
            "title": "Static Panel"
        }, 
        {
            "location": "/ag/pm/fo/xml_query_content/", 
            "text": "", 
            "title": "Xml Query Content"
        }, 
        {
            "location": "/ag/pm/fo/query_content/", 
            "text": "", 
            "title": "Query Content"
        }, 
        {
            "location": "/ag/pm/fo/apply_template/", 
            "text": "", 
            "title": "Apply Template"
        }, 
        {
            "location": "/ag/pm/fo/label/", 
            "text": "", 
            "title": "Label"
        }, 
        {
            "location": "/ag/pm/fo/html_box/", 
            "text": "", 
            "title": "Html Box"
        }, 
        {
            "location": "/ag/pm/fo/numeric/", 
            "text": "", 
            "title": "Numeric"
        }, 
        {
            "location": "/ag/pm/fo/range/", 
            "text": "", 
            "title": "Range"
        }, 
        {
            "location": "/ag/pm/fo/message_control/", 
            "text": "", 
            "title": "Message Control"
        }, 
        {
            "location": "/ag/pm/fo/money_box/", 
            "text": "", 
            "title": "Money Box"
        }, 
        {
            "location": "/ag/pm/fo/row_content/", 
            "text": "", 
            "title": "Row Content"
        }, 
        {
            "location": "/ag/pm/fo/repeating_content/", 
            "text": "", 
            "title": "Repeating Content"
        }, 
        {
            "location": "/ag/pm/fo/table_content/", 
            "text": "", 
            "title": "Table Content"
        }, 
        {
            "location": "/ag/pm/fo/tabbed_content/", 
            "text": "", 
            "title": "Tabbed Content"
        }, 
        {
            "location": "/ag/pm/fo/data_table/", 
            "text": "", 
            "title": "Data Table"
        }, 
        {
            "location": "/ag/pm/fo/xsl_transform/", 
            "text": "", 
            "title": "XSL Transform"
        }, 
        {
            "location": "/ag/pm/fo/conditional_content/", 
            "text": "", 
            "title": "Conditional Content"
        }, 
        {
            "location": "/ag/pm/fo/rules/", 
            "text": "", 
            "title": "Rules"
        }, 
        {
            "location": "/ag/pm/fo/charts_design/", 
            "text": "", 
            "title": "Charts Design"
        }, 
        {
            "location": "/ag/pm/databases/", 
            "text": "", 
            "title": "Databases"
        }, 
        {
            "location": "/ag/pm/localization/", 
            "text": "", 
            "title": "Localization"
        }, 
        {
            "location": "/ag/pm/namespaces/", 
            "text": "", 
            "title": "Namespaces"
        }, 
        {
            "location": "/ag/pm/screens/", 
            "text": "", 
            "title": "Screens"
        }, 
        {
            "location": "/ag/pm/sc/reference_toc/", 
            "text": "", 
            "title": "Reference TOC"
        }, 
        {
            "location": "/ag/pm/sc/activitystream.push/", 
            "text": "", 
            "title": "$ActivityStream.Push"
        }, 
        {
            "location": "/ag/pm/sc/cache.get/", 
            "text": "", 
            "title": "$Cache.Get"
        }, 
        {
            "location": "/ag/pm/sc/cache.set/", 
            "text": "", 
            "title": "$Cache.Set"
        }, 
        {
            "location": "/ag/pm/sc/calendar/", 
            "text": "", 
            "title": "$Calendar"
        }, 
        {
            "location": "/ag/pm/sc/database/", 
            "text": "", 
            "title": "$Database Method List"
        }, 
        {
            "location": "/ag/pm/sc/database.adddata/", 
            "text": "", 
            "title": "$Database.AddData"
        }, 
        {
            "location": "/ag/pm/sc/database.deletedata/", 
            "text": "", 
            "title": "$Database.DeleteData"
        }, 
        {
            "location": "/ag/pm/sc/database.empty/", 
            "text": "", 
            "title": "$Database.Empty"
        }, 
        {
            "location": "/ag/pm/sc/database.ensuredata/", 
            "text": "", 
            "title": "$Database.EnsureData"
        }, 
        {
            "location": "/ag/pm/sc/database.exporttoxml/", 
            "text": "", 
            "title": "$Database.ExportToXml"
        }, 
        {
            "location": "/ag/pm/sc/database.get/", 
            "text": "", 
            "title": "$Database.Get"
        }, 
        {
            "location": "/ag/pm/sc/database.getdata/", 
            "text": "", 
            "title": "$Database.GetData"
        }, 
        {
            "location": "/ag/pm/sc/database.importfromxml/", 
            "text": "", 
            "title": "$Database.ImportFromXml"
        }, 
        {
            "location": "/ag/pm/sc/delegation/", 
            "text": "", 
            "title": "$Delegation Method List"
        }, 
        {
            "location": "/ag/pm/sc/delegation.add/", 
            "text": "", 
            "title": "$Delegation.Add"
        }, 
        {
            "location": "/ag/pm/sc/delegation.delete/", 
            "text": "", 
            "title": "$Delegation.Delete"
        }, 
        {
            "location": "/ag/pm/sc/documents/", 
            "text": "", 
            "title": "$Documents Method List"
        }, 
        {
            "location": "/ag/pm/sc/documents.get/", 
            "text": "", 
            "title": "$Documents.Get"
        }, 
        {
            "location": "/ag/pm/sc/documents.getlastversion/", 
            "text": "", 
            "title": "$Documents.GetLastVersion"
        }, 
        {
            "location": "/ag/pm/sc/documents.new/", 
            "text": "", 
            "title": "$Documents.New"
        }, 
        {
            "location": "/ag/pm/sc/documents.newversion/", 
            "text": "", 
            "title": "$Documents.NewVersion"
        }, 
        {
            "location": "/ag/pm/sc/domain.getsecurityprofiles/", 
            "text": "", 
            "title": "$Domain.GetSecurityProfiles"
        }, 
        {
            "location": "/ag/pm/sc/domain.haspermission/", 
            "text": "", 
            "title": "$Domain.HasPermission"
        }, 
        {
            "location": "/ag/pm/sc/domain.hasprocess/", 
            "text": "", 
            "title": "$Domain.HasProcess"
        }, 
        {
            "location": "/ag/pm/sc/domain.logourl/", 
            "text": "", 
            "title": "$Domain.LogoUrl"
        }, 
        {
            "location": "/ag/pm/sc/domain.url/", 
            "text": "", 
            "title": "$Domain.Url"
        }, 
        {
            "location": "/ag/pm/sc/files/", 
            "text": "", 
            "title": "$Files"
        }, 
        {
            "location": "/ag/pm/sc/localization/", 
            "text": "", 
            "title": "$Localization"
        }, 
        {
            "location": "/ag/pm/sc/market.getlicenselimits/", 
            "text": "", 
            "title": "$Market.GetLicenseLimits"
        }, 
        {
            "location": "/ag/pm/sc/market.validatelicense/", 
            "text": "", 
            "title": "$Market.ValidateLicense"
        }, 
        {
            "location": "/ag/pm/sc/membership/", 
            "text": "", 
            "title": "$Membership Method List"
        }, 
        {
            "location": "/ag/pm/sc/membership.administrator/", 
            "text": "", 
            "title": "$Membership.Administrator"
        }, 
        {
            "location": "/ag/pm/sc/membership.findidentity/", 
            "text": "", 
            "title": "$Membership.FindIdentity"
        }, 
        {
            "location": "/ag/pm/sc/membership.findmanager/", 
            "text": "", 
            "title": "$Membership.FindManager"
        }, 
        {
            "location": "/ag/pm/sc/membership.findposition/", 
            "text": "", 
            "title": "$Membership.FindPosition"
        }, 
        {
            "location": "/ag/pm/sc/membership.get/", 
            "text": "", 
            "title": "$Membership.Get"
        }, 
        {
            "location": "/ag/pm/sc/membership.getproperty/", 
            "text": "", 
            "title": "$Membership.GetProperty"
        }, 
        {
            "location": "/ag/pm/sc/membership.join/", 
            "text": "", 
            "title": "$Membership.Join"
        }, 
        {
            "location": "/ag/pm/sc/messages/", 
            "text": "", 
            "title": "$Messages Method List"
        }, 
        {
            "location": "/ag/pm/sc/messages.addemlsignature/", 
            "text": "", 
            "title": "$Messages.AddEMLSignature"
        }, 
        {
            "location": "/ag/pm/sc/messages.createeml/", 
            "text": "", 
            "title": "$Messages.CreateEML"
        }, 
        {
            "location": "/ag/pm/sc/messages.getemlsignaturehash/", 
            "text": "", 
            "title": "$Messages.GetEMLSignatureHash"
        }, 
        {
            "location": "/ag/pm/sc/messages.new/", 
            "text": "", 
            "title": "$Messages.New"
        }, 
        {
            "location": "/ag/pm/sc/messages.parseeml/", 
            "text": "", 
            "title": "$Messages.ParseEML"
        }, 
        {
            "location": "/ag/pm/sc/rest.create/", 
            "text": "", 
            "title": "$Rest.Create"
        }, 
        {
            "location": "/ag/pm/sc/templates.format/", 
            "text": "", 
            "title": "$Templates.Format"
        }, 
        {
            "location": "/ag/pm/sc/templates.get/", 
            "text": "", 
            "title": "$Templates.Get"
        }, 
        {
            "location": "/ag/pm/sc/templates.subject/", 
            "text": "", 
            "title": "$Templates.Subject"
        }, 
        {
            "location": "/ag/pm/sc/xml/", 
            "text": "", 
            "title": "$Xml"
        }, 
        {
            "location": "/ag/pm/sc/xmlrepository/", 
            "text": "", 
            "title": "$XmlRepository Method List"
        }, 
        {
            "location": "/ag/pm/sc/xmlrepository.delete/", 
            "text": "", 
            "title": "$XmlRepository.Delete"
        }, 
        {
            "location": "/ag/pm/sc/xmlrepository.query/", 
            "text": "", 
            "title": "$XmlRepository.Query"
        }, 
        {
            "location": "/ag/pm/sc/xmlrepository.queryxml/", 
            "text": "", 
            "title": "$XmlRepository.QueryXml"
        }, 
        {
            "location": "/ag/pm/sc/xmlrepository.save/", 
            "text": "", 
            "title": "$XmlRepository.Save"
        }, 
        {
            "location": "/ag/pm/sc/calendar/", 
            "text": "", 
            "title": "Calendar Method List"
        }, 
        {
            "location": "/ag/pm/sc/calendar.add/", 
            "text": "", 
            "title": "Calendar.Add"
        }, 
        {
            "location": "/ag/pm/sc/calendar.addasync/", 
            "text": "", 
            "title": "Calendar.AddAsync"
        }, 
        {
            "location": "/ag/pm/sc/calendar.adddays/", 
            "text": "", 
            "title": "Calendar.AddDays"
        }, 
        {
            "location": "/ag/pm/sc/calendar.adddaysasync/", 
            "text": "", 
            "title": "Calendar.AddDaysAsync"
        }, 
        {
            "location": "/ag/pm/sc/calendar.addmonths/", 
            "text": "", 
            "title": "Calendar.AddMonths"
        }, 
        {
            "location": "/ag/pm/sc/calendar.addmonthsasync/", 
            "text": "", 
            "title": "Calendar.AddMonthsAsync"
        }, 
        {
            "location": "/ag/pm/sc/calendar.addtimespan/", 
            "text": "", 
            "title": "Calendar.AddTimeSpan"
        }, 
        {
            "location": "/ag/pm/sc/calendar.addtimespanasync/", 
            "text": "", 
            "title": "Calendar.AddTimeSpanAsync"
        }, 
        {
            "location": "/ag/pm/sc/calendar.addyears/", 
            "text": "", 
            "title": "Calendar.AddYears"
        }, 
        {
            "location": "/ag/pm/sc/calendar.addyearsasync/", 
            "text": "", 
            "title": "Calendar.AddYearsAsync"
        }, 
        {
            "location": "/ag/pm/sc/calendar.changetimezone/", 
            "text": "", 
            "title": "Calendar.ChangeTimeZone"
        }, 
        {
            "location": "/ag/pm/sc/calendar.changetimezoneasync/", 
            "text": "", 
            "title": "Calendar.ChangeTimeZoneAsync"
        }, 
        {
            "location": "/ag/pm/sc/calendar.getdatetime/", 
            "text": "", 
            "title": "Calendar.GetDateTime"
        }, 
        {
            "location": "/ag/pm/sc/calendar.getdatetimeasync/", 
            "text": "", 
            "title": "Calendar.GetDateTimeAsync"
        }, 
        {
            "location": "/ag/pm/sc/calendar.getstandardcalendar/", 
            "text": "", 
            "title": "Calendar.GetStandardCalendar"
        }, 
        {
            "location": "/ag/pm/sc/calendar.gettimezone/", 
            "text": "", 
            "title": "Calendar.GetTimeZone"
        }, 
        {
            "location": "/ag/pm/sc/calendar.gettoday/", 
            "text": "", 
            "title": "Calendar.GetToday"
        }, 
        {
            "location": "/ag/pm/sc/calendar.gettodayasync/", 
            "text": "", 
            "title": "Calendar.GetTodayAsync"
        }, 
        {
            "location": "/ag/pm/sc/calendar.getweekendcalendar/", 
            "text": "", 
            "title": "Calendar.GetWeekendCalendar"
        }, 
        {
            "location": "/ag/pm/sc/calendar.subtract/", 
            "text": "", 
            "title": "Calendar.Subtract"
        }, 
        {
            "location": "/ag/pm/sc/calendar.subtractasync/", 
            "text": "", 
            "title": "Calendar.SubtractAsync"
        }, 
        {
            "location": "/ag/pm/sc/datatable.add/", 
            "text": "", 
            "title": "DataTable.Add"
        }, 
        {
            "location": "/ag/pm/sc/datatable.deleteall/", 
            "text": "", 
            "title": "DataTable.DeleteAll"
        }, 
        {
            "location": "/ag/pm/sc/datatable.each/", 
            "text": "", 
            "title": "DataTable.Each"
        }, 
        {
            "location": "/ag/pm/sc/datatable.importfromxml/", 
            "text": "", 
            "title": "DataTable.ImportFromXml"
        }, 
        {
            "location": "/ag/pm/sc/datatable.map/", 
            "text": "", 
            "title": "DataTable.Map"
        }, 
        {
            "location": "/ag/pm/sc/datatable.rowcount/", 
            "text": "", 
            "title": "DataTable.RowCount"
        }, 
        {
            "location": "/ag/pm/sc/datatable.rows/", 
            "text": "", 
            "title": "DataTable.Rows"
        }, 
        {
            "location": "/ag/pm/sc/datatable.save/", 
            "text": "", 
            "title": "DataTable.Save"
        }, 
        {
            "location": "/ag/pm/sc/datatable.todictionary/", 
            "text": "", 
            "title": "DataTable.ToDictionary"
        }, 
        {
            "location": "/ag/pm/sc/datatabledictionary.ensure/", 
            "text": "", 
            "title": "DataTableDictionary.Ensure"
        }, 
        {
            "location": "/ag/pm/sc/datatabledictionary.get/", 
            "text": "", 
            "title": "DataTableDictionary.Get"
        }, 
        {
            "location": "/ag/pm/sc/datatabledictionary.has/", 
            "text": "", 
            "title": "DataTableDictionary.Has"
        }, 
        {
            "location": "/ag/pm/sc/datatabledictionary.keys/", 
            "text": "", 
            "title": "DataTableDictionary.Keys"
        }, 
        {
            "location": "/ag/pm/sc/datatabledictionary.save/", 
            "text": "", 
            "title": "DataTableDictionary.Save"
        }, 
        {
            "location": "/ag/pm/sc/datatabledictionary.set/", 
            "text": "", 
            "title": "DataTableDictionary.Set"
        }, 
        {
            "location": "/ag/pm/sc/datetimeoffset/", 
            "text": "", 
            "title": "DateTimeOffset"
        }, 
        {
            "location": "/ag/pm/sc/document.addprofile/", 
            "text": "", 
            "title": "Document.AddProfile"
        }, 
        {
            "location": "/ag/pm/sc/document.archive/", 
            "text": "", 
            "title": "Document.Archive"
        }, 
        {
            "location": "/ag/pm/sc/document.branchid/", 
            "text": "", 
            "title": "Document.BranchId"
        }, 
        {
            "location": "/ag/pm/sc/document.contenttype/", 
            "text": "", 
            "title": "Document.ContentType"
        }, 
        {
            "location": "/ag/pm/sc/document.createdat/", 
            "text": "", 
            "title": "Document.CreatedAt"
        }, 
        {
            "location": "/ag/pm/sc/document.delete/", 
            "text": "", 
            "title": "Document.Delete"
        }, 
        {
            "location": "/ag/pm/sc/document.description/", 
            "text": "", 
            "title": "Document.Description"
        }, 
        {
            "location": "/ag/pm/sc/document.files/", 
            "text": "", 
            "title": "Document.Files"
        }, 
        {
            "location": "/ag/pm/sc/document.id/", 
            "text": "", 
            "title": "Document.Id"
        }, 
        {
            "location": "/ag/pm/sc/document.isreadonly/", 
            "text": "", 
            "title": "Document.IsReadonly"
        }, 
        {
            "location": "/ag/pm/sc/document.profile/", 
            "text": "", 
            "title": "Document.Profile"
        }, 
        {
            "location": "/ag/pm/sc/document.publish/", 
            "text": "", 
            "title": "Document.Publish"
        }, 
        {
            "location": "/ag/pm/sc/document.save/", 
            "text": "", 
            "title": "Document.Save"
        }, 
        {
            "location": "/ag/pm/sc/document.setsecurityprofile/", 
            "text": "", 
            "title": "Document.SetSecurityProfile"
        }, 
        {
            "location": "/ag/pm/sc/document.state/", 
            "text": "", 
            "title": "Document.State"
        }, 
        {
            "location": "/ag/pm/sc/document.title/", 
            "text": "", 
            "title": "Document.Title"
        }, 
        {
            "location": "/ag/pm/sc/document.unpublish/", 
            "text": "", 
            "title": "Document.Unpublish"
        }, 
        {
            "location": "/ag/pm/sc/document.version/", 
            "text": "", 
            "title": "Document.Version"
        }, 
        {
            "location": "/ag/pm/sc/document/", 
            "text": "", 
            "title": "Document Method List"
        }, 
        {
            "location": "/ag/pm/sc/fileinfo/", 
            "text": "", 
            "title": "FileInfo"
        }, 
        {
            "location": "/ag/pm/sc/files.addbase64/", 
            "text": "", 
            "title": "Files.AddBase64"
        }, 
        {
            "location": "/ag/pm/sc/files.addfile/", 
            "text": "", 
            "title": "Files.AddFile"
        }, 
        {
            "location": "/ag/pm/sc/files.addpdf/", 
            "text": "", 
            "title": "Files.AddPDF"
        }, 
        {
            "location": "/ag/pm/sc/files.addstring/", 
            "text": "", 
            "title": "Files.AddString"
        }, 
        {
            "location": "/ag/pm/sc/files.delete/", 
            "text": "", 
            "title": "Files.Delete"
        }, 
        {
            "location": "/ag/pm/sc/files.download/", 
            "text": "", 
            "title": "Files.Download"
        }, 
        {
            "location": "/ag/pm/sc/files.getbase64/", 
            "text": "", 
            "title": "Files.GetBase64"
        }, 
        {
            "location": "/ag/pm/sc/files.getstring/", 
            "text": "", 
            "title": "Files.GetString"
        }, 
        {
            "location": "/ag/pm/sc/files.replace/", 
            "text": "", 
            "title": "Files.Replace"
        }, 
        {
            "location": "/ag/pm/sc/files.upload/", 
            "text": "", 
            "title": "Files.Upload"
        }, 
        {
            "location": "/ag/pm/sc/filetransferoptions/", 
            "text": "", 
            "title": "FileTransferOptions"
        }, 
        {
            "location": "/ag/pm/sc/identity/", 
            "text": "", 
            "title": "Identity"
        }, 
        {
            "location": "/ag/pm/sc/instance/", 
            "text": "", 
            "title": "Instance Method List"
        }, 
        {
            "location": "/ag/pm/sc/instance.culture/", 
            "text": "", 
            "title": "Instance.Culture"
        }, 
        {
            "location": "/ag/pm/sc/instance.id/", 
            "text": "", 
            "title": "Instance.Id"
        }, 
        {
            "location": "/ag/pm/sc/instance.initiator/", 
            "text": "", 
            "title": "Instance.Initiator"
        }, 
        {
            "location": "/ag/pm/sc/instance.initiatorworkitem/", 
            "text": "", 
            "title": "Instance.InitiatorWorkItem"
        }, 
        {
            "location": "/ag/pm/sc/instance.number/", 
            "text": "", 
            "title": "Instance.Number"
        }, 
        {
            "location": "/ag/pm/sc/instance.parentworkitem/", 
            "text": "", 
            "title": "Instance.ParentWorkItem"
        }, 
        {
            "location": "/ag/pm/sc/instance.priority/", 
            "text": "", 
            "title": "Instance.Priority"
        }, 
        {
            "location": "/ag/pm/sc/instance.processid/", 
            "text": "", 
            "title": "Instance.ProcessId"
        }, 
        {
            "location": "/ag/pm/sc/instance.testmode/", 
            "text": "", 
            "title": "Instance.TestMode"
        }, 
        {
            "location": "/ag/pm/sc/message.id/", 
            "text": "", 
            "title": "Message.Id"
        }, 
        {
            "location": "/ag/pm/sc/message.from/", 
            "text": "", 
            "title": "Message.From"
        }, 
        {
            "location": "/ag/pm/sc/message.to/", 
            "text": "", 
            "title": "Message.To"
        }, 
        {
            "location": "/ag/pm/sc/message.cc/", 
            "text": "", 
            "title": "Message.CC"
        }, 
        {
            "location": "/ag/pm/sc/message.bcc/", 
            "text": "", 
            "title": "Message.BCC"
        }, 
        {
            "location": "/ag/pm/sc/message.subject/", 
            "text": "", 
            "title": "Message.Subject"
        }, 
        {
            "location": "/ag/pm/sc/message.body/", 
            "text": "", 
            "title": "Message.Body"
        }, 
        {
            "location": "/ag/pm/sc/message.send/", 
            "text": "", 
            "title": "Message.Send"
        }, 
        {
            "location": "/ag/pm/sc/message.attach/", 
            "text": "", 
            "title": "Message.Attach"
        }, 
        {
            "location": "/ag/pm/sc/message.attachstring/", 
            "text": "", 
            "title": "Message.AttachString"
        }, 
        {
            "location": "/ag/pm/sc/message.attachfile/", 
            "text": "", 
            "title": "Message.AttachFile"
        }, 
        {
            "location": "/ag/pm/sc/message.date/", 
            "text": "", 
            "title": "Message.Date"
        }, 
        {
            "location": "/ag/pm/sc/message.priority/", 
            "text": "", 
            "title": "Message.Priority"
        }, 
        {
            "location": "/ag/pm/sc/message.replyto/", 
            "text": "", 
            "title": "Message.ReplyTo"
        }, 
        {
            "location": "/ag/pm/sc/message.signature/", 
            "text": "", 
            "title": "Message.Signature"
        }, 
        {
            "location": "/ag/pm/sc/message.sendbefore/", 
            "text": "", 
            "title": "Message.SendBefore"
        }, 
        {
            "location": "/ag/pm/sc/message.sendafter/", 
            "text": "", 
            "title": "Message.SendAfter"
        }, 
        {
            "location": "/ag/pm/sc/message.deleteafter/", 
            "text": "", 
            "title": "Message.DeleteAfter"
        }, 
        {
            "location": "/ag/pm/sc/message.getheader/", 
            "text": "", 
            "title": "Message.GetHeader"
        }, 
        {
            "location": "/ag/pm/sc/message.setheader/", 
            "text": "", 
            "title": "Message.SetHeader"
        }, 
        {
            "location": "/ag/pm/sc/restclient.authenticate/", 
            "text": "", 
            "title": "RestClient.Authenticate"
        }, 
        {
            "location": "/ag/pm/sc/restclient.authenticatebasic/", 
            "text": "", 
            "title": "RestClient.AuthenticateBasic"
        }, 
        {
            "location": "/ag/pm/sc/restclient.authenticatejwt/", 
            "text": "", 
            "title": "RestClient.AuthenticateJwt"
        }, 
        {
            "location": "/ag/pm/sc/restclient.authenticatentlm/", 
            "text": "", 
            "title": "RestClient.AuthenticateNtlm"
        }, 
        {
            "location": "/ag/pm/sc/restclient.ensureauthenticated/", 
            "text": "", 
            "title": "RestClient.EnsureAuthenticated"
        }, 
        {
            "location": "/ag/pm/sc/restclient.isauthenticated/", 
            "text": "", 
            "title": "RestClient.IsAuthenticated"
        }, 
        {
            "location": "/ag/pm/sc/restclient.request/", 
            "text": "", 
            "title": "RestClient.Request"
        }, 
        {
            "location": "/ag/pm/sc/restclient.url/", 
            "text": "", 
            "title": "RestClient.Url"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addfile/", 
            "text": "", 
            "title": "RestRequest.AddFile"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addfilebase64/", 
            "text": "", 
            "title": "RestRequest.AddFileBase64"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addfilebody/", 
            "text": "", 
            "title": "RestRequest.AddFileBody"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addfilebodybase64/", 
            "text": "", 
            "title": "RestRequest.AddFileBodyBase64"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addheader/", 
            "text": "", 
            "title": "RestRequest.AddHeader"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addobject/", 
            "text": "", 
            "title": "RestRequest.AddObject"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addparameter/", 
            "text": "", 
            "title": "RestRequest.AddParameter"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addqueryparameter/", 
            "text": "", 
            "title": "RestRequest.AddQueryParameter"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addurlparameter/", 
            "text": "", 
            "title": "RestRequest.AddUrlParameter"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.addxml/", 
            "text": "", 
            "title": "RestRequest.AddXml"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.delete/", 
            "text": "", 
            "title": "RestRequest.Delete"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.deleteasync/", 
            "text": "", 
            "title": "RestRequest.DeleteAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.execute/", 
            "text": "", 
            "title": "RestRequest.Execute"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.executeasync/", 
            "text": "", 
            "title": "RestRequest.ExecuteAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.executejson/", 
            "text": "", 
            "title": "RestRequest.ExecuteJson"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.executejsonasync/", 
            "text": "", 
            "title": "RestRequest.ExecuteJsonAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.executestring/", 
            "text": "", 
            "title": "RestRequest.ExecuteString"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.executestringasync/", 
            "text": "", 
            "title": "RestRequest.ExecuteStringAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.executexml/", 
            "text": "", 
            "title": "RestRequest.ExecuteXml"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.executexmlasync/", 
            "text": "", 
            "title": "RestRequest.ExecuteXmlAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.expect/", 
            "text": "", 
            "title": "RestRequest.Expect"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.get/", 
            "text": "", 
            "title": "RestRequest.Get"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.getasync/", 
            "text": "", 
            "title": "RestRequest.GetAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.method/", 
            "text": "", 
            "title": "RestRequest.Method"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.patch/", 
            "text": "", 
            "title": "RestRequest.Patch"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.patchasync/", 
            "text": "", 
            "title": "RestRequest.PatchAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.post/", 
            "text": "", 
            "title": "RestRequest.Post"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.postasync/", 
            "text": "", 
            "title": "RestRequest.PostAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.put/", 
            "text": "", 
            "title": "RestRequest.Put"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.putasync/", 
            "text": "", 
            "title": "RestRequest.PutAsync"
        }, 
        {
            "location": "/ag/pm/sc/restrequest.setfilefragment/", 
            "text": "", 
            "title": "RestRequest.SetFileFragment"
        }, 
        {
            "location": "/ag/pm/sc/restresponse.content/", 
            "text": "", 
            "title": "RestResponse.Content"
        }, 
        {
            "location": "/ag/pm/sc/restresponse.contenttype/", 
            "text": "", 
            "title": "RestResponse.ContentType"
        }, 
        {
            "location": "/ag/pm/sc/restresponse.getheader/", 
            "text": "", 
            "title": "RestResponse.GetHeader"
        }, 
        {
            "location": "/ag/pm/sc/restresponse.statuscode/", 
            "text": "", 
            "title": "RestResponse.StatusCode"
        }, 
        {
            "location": "/ag/pm/sc/restresponse.tojson/", 
            "text": "", 
            "title": "RestResponse.ToJson"
        }, 
        {
            "location": "/ag/pm/sc/restresponse.toxml/", 
            "text": "", 
            "title": "RestResponse.ToXml"
        }, 
        {
            "location": "/ag/pm/sc/restresponse.verify/", 
            "text": "", 
            "title": "RestResponse.Verify"
        }, 
        {
            "location": "/ag/pm/sc/workitem/", 
            "text": "", 
            "title": "WorkItem Method List"
        }, 
        {
            "location": "/ag/pm/sc/workitem.caption/", 
            "text": "", 
            "title": "WorkItem.Caption"
        }, 
        {
            "location": "/ag/pm/sc/workitem.completedby/", 
            "text": "", 
            "title": "WorkItem.CompletedBy"
        }, 
        {
            "location": "/ag/pm/sc/workitem.data/", 
            "text": "", 
            "title": "WorkItem.Data"
        }, 
        {
            "location": "/ag/pm/sc/workitem.deadlinedate/", 
            "text": "", 
            "title": "WorkItem.DeadlineDate"
        }, 
        {
            "location": "/ag/pm/sc/workitem.end/", 
            "text": "", 
            "title": "WorkItem.End"
        }, 
        {
            "location": "/ag/pm/sc/workitem.forward/", 
            "text": "", 
            "title": "WorkItem.Forward"
        }, 
        {
            "location": "/ag/pm/sc/workitem.get/", 
            "text": "", 
            "title": "WorkItem.Get"
        }, 
        {
            "location": "/ag/pm/sc/workitem.id/", 
            "text": "", 
            "title": "WorkItem.Id"
        }, 
        {
            "location": "/ag/pm/sc/workitem.initiate/", 
            "text": "", 
            "title": "WorkItem.Initiate"
        }, 
        {
            "location": "/ag/pm/sc/workitem.instance/", 
            "text": "", 
            "title": "WorkItem.Instance"
        }, 
        {
            "location": "/ag/pm/sc/workitem.instructions/", 
            "text": "", 
            "title": "WorkItem.Instructions"
        }, 
        {
            "location": "/ag/pm/sc/workitem.isdeadlined/", 
            "text": "", 
            "title": "WorkItem.IsDeadlined"
        }, 
        {
            "location": "/ag/pm/sc/workitem.name/", 
            "text": "", 
            "title": "WorkItem.Name"
        }, 
        {
            "location": "/ag/pm/sc/workitem.nextreminder/", 
            "text": "", 
            "title": "WorkItem.NextReminder"
        }, 
        {
            "location": "/ag/pm/sc/workitem.previous/", 
            "text": "", 
            "title": "WorkItem.Previous"
        }, 
        {
            "location": "/ag/pm/sc/workitem.process/", 
            "text": "", 
            "title": "WorkItem.Process"
        }, 
        {
            "location": "/ag/pm/sc/workitem.processworkitem/", 
            "text": "", 
            "title": "WorkItem.ProcessWorkItem"
        }, 
        {
            "location": "/ag/pm/sc/workitem.reprocess/", 
            "text": "", 
            "title": "WorkItem.ReProcess"
        }, 
        {
            "location": "/ag/pm/sc/workitem.selectedaction/", 
            "text": "", 
            "title": "WorkItem.SelectedAction"
        }, 
        {
            "location": "/ag/pm/sc/workitem.start/", 
            "text": "", 
            "title": "WorkItem.Start"
        }, 
        {
            "location": "/ag/pm/sc/workitem.state/", 
            "text": "", 
            "title": "WorkItem.State"
        }, 
        {
            "location": "/ag/pm/sc/workitem.terminate/", 
            "text": "", 
            "title": "WorkItem.Terminate"
        }, 
        {
            "location": "/ag/pm/sc/workitem.trigger/", 
            "text": "", 
            "title": "WorkItem.Trigger"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode/", 
            "text": "", 
            "title": "XmlNode Method List"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.appendchild/", 
            "text": "", 
            "title": "XmlNode.AppendChild"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.assert/", 
            "text": "", 
            "title": "XmlNode.Assert"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.bind/", 
            "text": "", 
            "title": "XmlNode.Bind"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.commitdeletes/", 
            "text": "", 
            "title": "XmlNode.CommitDeletes"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.copy/", 
            "text": "", 
            "title": "XmlNode.Copy"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.count/", 
            "text": "", 
            "title": "XmlNode.Count"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.equals/", 
            "text": "", 
            "title": "XmlNode.Equals"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.evaluate/", 
            "text": "", 
            "title": "XmlNode.Evaluate"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.evaluateboolean/", 
            "text": "", 
            "title": "XmlNode.EvaluateBoolean"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.evaluatedatetime/", 
            "text": "", 
            "title": "XmlNode.EvaluateDateTime"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.evaluatenumber/", 
            "text": "", 
            "title": "XmlNode.EvaluateNumber"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.format/", 
            "text": "", 
            "title": "XmlNode.Format"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.getattribute/", 
            "text": "", 
            "title": "XmlNode.GetAttribute"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.innerxml/", 
            "text": "", 
            "title": "XmlNode.InnerXml"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.isempty/", 
            "text": "", 
            "title": "XmlNode.IsEmpty"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.live/", 
            "text": "", 
            "title": "XmlNode.Live"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.load/", 
            "text": "", 
            "title": "XmlNode.Load"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.outerxml/", 
            "text": "", 
            "title": "XmlNode.OuterXml"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.parse/", 
            "text": "", 
            "title": "XmlNode.Parse"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.remove/", 
            "text": "", 
            "title": "XmlNode.Remove"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.removeattribute/", 
            "text": "", 
            "title": "XmlNode.RemoveAttribute"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.save/", 
            "text": "", 
            "title": "XmlNode.Save"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.selectall/", 
            "text": "", 
            "title": "XmlNode.SelectAll"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.selectsingle/", 
            "text": "", 
            "title": "XmlNode.SelectSingle"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.setattribute/", 
            "text": "", 
            "title": "XmlNode.SetAttribute"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.setattributens/", 
            "text": "", 
            "title": "XmlNode.SetAttributeNS"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.setdefaultvalue/", 
            "text": "", 
            "title": "XmlNode.SetDefaultValue"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.setvalue/", 
            "text": "", 
            "title": "XmlNode.SetValue"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.sum/", 
            "text": "", 
            "title": "XmlNode.Sum"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.sync/", 
            "text": "", 
            "title": "XmlNode.Sync"
        }, 
        {
            "location": "/ag/pm/sc/xmlnode.transform/", 
            "text": "", 
            "title": "XmlNode.Transform"
        }, 
        {
            "location": "/ag/pm/sc/scripting_modules/", 
            "text": "", 
            "title": "Scripting Modules"
        }, 
        {
            "location": "/ag/pm/sc/variables/", 
            "text": "", 
            "title": "Variables"
        }, 
        {
            "location": "/ag/pm/web_services/", 
            "text": "", 
            "title": "Web Services"
        }, 
        {
            "location": "/ag/pm/data_templates/", 
            "text": "", 
            "title": "Data Templates"
        }, 
        {
            "location": "/ag/pa/process_access_control_list/", 
            "text": "", 
            "title": "Process Access Control List"
        }, 
        {
            "location": "/ag/pa/background_jobs/", 
            "text": "Workrunner performs most of heavy operations in background to achieve scalable and high performance output. These background operations are executed by Workrunner service agent without any user interaction.\n\n\nWhen a new process started by user, workflow state is recorded in database without any further processing and creates a couple of background jobs. Service agents pulls the jobs from queue and try to process in background. If an error occurs while processing job, transaction state is rollbacked and error state is reported to the system administrators. When administrator resolves the issue, job re-queued in system from job manager to process again. Some of errors are automatically recovered by system and queued again with time delay.\n\n\n \n\n\nService agents uses multiple threads and also can be deployed to any number of hardware instances to perform parallel execution. Jobs are executed in order of priority and a single service agent can complete 600 job per minute for basic workflow operations. This number is highly depends on job definition and hardware specifications.\n\n\nJob Details\n\n\nEach job has following properties;\n\n\nType\n\n\nType of job. \n\n\nCreated At\n\n\nDate and time of job is created.\n\n\nDelete After\n\n\nDate and time of job to delete.\n\n\nStarted At\n\n\nStart date and time of job.\n\n\nCompleted At\n\n\nCompletion date and time of job.\n\n\nDuration\n\n\nDuration of execution if job is completed or duration of wait time in queue.\n\n\nScore\n\n\nCalculated priority score. This value is calculated from job type priority and workflow instance priority.\n\n\nState\n\n\nState of job. Can be one of following values; Waiting, Processing, Error, Completed, Aborted.\n\n\nState Transition\n\n\nEvery job is created in \"Waiting\" state.\n\n\nWhen a service agent pulls the job from queue, agent locks the job and changes to \"Processing\" state.\n\n\nIf job is successfully completed state changes to \"Completed\".\n\n\nIf job generates an error, state changes to \"Error\" and system administrator is notified. Some of job errors are automatically handled. For example e-mail sending job errors are ignored and re-scheduled and state changes to \"Waiting\" to try again later. If maximum try count limit exceeded state is changed to \"Error\" or \"Aborted\" by configuration settings.\n\n\nFor \"Aborted\" and \"Completed\" states job is automatically deleted from system if \"Delete After\" date is passed.\n\n\n \n\n\nJob Log\n\n\nEach job contains a log about detailed information of what is performed in background. Each log line has a in log level like Debug,Information,Warning,Error.\n\n\n \n\n\nJob Types\n\n\nWorkflow Jobs\n\n\nScheduled Task\n\n\nTime based generic job. This job usually creates another jobs if any action required.\n\n\nTask Evaluation\n\n\nCreated when initiate type workflow task scheduled to start periodically. Created by Scheduled Task for per task definition. You can find more detail in \nTask Evaluation\n section. \n\n\nWork Item Evaluation\n\n\nCreated when normal type workflow task scheduled to check periodically. Created by Scheduled Task for per work item instance. You can find more detail in \nTask Evaluation\n section.\n\n\nWork Item Processing\n\n\nCreated when a user or system complete a work item. This job advances to next step in workflow and executes the scripts in workflow, calculates the role scripts to assign to task.\n\n\nDeadlined Work Item\n\n\nCreated when a work item's deadline occurs. This job is similar to \"Work Item Processing\" job but created when deadline date is missed.\n\n\nWork Item Reminder\n\n\nCreated when a task reminder need to be sent.\n\n\nXml Database Jobs\n\n\nForm Data Xml Database Replication\n\n\nCreated when workflow data need to be replicated on xml database. This job usually created when a workflow data is modified.\n\n\nInstance Xml Database Replication\n\n\nCreated when a workflow history is changed and need to be replicated on xml database.\n\n\nXml Database Removal\n\n\nCreated when a worfklow data is removed. This job is usually created when a process version is deleted from system.\n\n\nFull Text Indexing Jobs\n\n\nWork Item Full Text Indexing\n\n\nCreated when a workflow data is modified and updates the full text catalog.\n\n\nDocument Full Text Indexing\n\n\nCreated when a document content is modified and updates the full text catalog.\n\n\nFull Text Removal\n\n\nCreated when a previously added document is removed from full text catalog.\n\n\nDomain Jobs\n\n\nE-Mail Message Send\n\n\nCreated when an email message is sent. Email content may be automatically generated from workflow templates or scripting environment.\n\n\nDomain Upgrade\n\n\nCreated periodically to upgrade installed processes from market store.\n\n\nDomain Deletion\n\n\nCreated when a domain is expired and no longer active.\n\n\nDefault Job Configuration\n\n\nWorkrunner uses following default configuration to manage job queue.\n\n\n\n.tg  {border-collapse:collapse;border-spacing:0;}\n.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}\n.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}\n.tg .tg-baqh{text-align:center;vertical-align:top}\n.tg .tg-yw4l{vertical-align:top}\n\n\n\n\n\n\n  \n\n    \nName\n\n    \nInternal Name\n\n    \nPriority\n\n    \nDelete\nAfter\n(days)\n(No)\n\n    \nRetry \nDuration \n(min)\n(No)\n\n    \nMax \nRetry\n(No)\n\n    \nMax \nRetry \nResult\n(Abort)\n\n    \nError \nResult\n(Error)\n\n    \nAlert \nError\n(True)\n\n    \nAlert \nAbort\n(False)\n\n  \n\n  \n\n    \nScheduled \nTask\n\n    \nWorkflow.ScheduledTask\n\n    \nHigh\n\n    \n90\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nTask \nEvaluation\n\n    \nWorkflow.Task.Evaluate\n\n    \nHigh\n\n    \n180\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nWork Item \nEvaluation\n\n    \nWorkflow.WorkItem.Evaluate\n\n    \nHigh\n\n    \n180\n\n    \n10\n\n    \n20\n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nWork Item \nProcessing\n\n    \nWorkflow.WorkItem.Process\n\n    \nHigh\n\n    \n180\n\n    \n10\n\n    \n20\n\n    \nError\n\n    \n\n    \n\n    \nTrue\n\n  \n\n  \n\n    \nDeadlined \nWork Item\n\n    \nWorkflow.WorkItem.Deadline\n\n    \nHigh\n\n    \n180\n\n    \n10\n\n    \n20\n\n    \n\n    \n\n    \n\n    \nTrue\n\n  \n\n  \n\n    \nWork Item \nReminder\n\n    \nWorkflow.WorkItem.Reminder\n\n    \nHigh\n\n    \n60\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nWork Item \nFull Text \nIndexing\n\n    \nWorkflow.WorkItem.FullText\n\n    \nLow\n\n    \n2\n\n    \n\n    \n10\n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nDocument \nFull Text \nIndexing\n\n    \nWorkflow.Document.FullText\n\n    \nLow\n\n    \n2\n\n    \n\n    \n20\n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nFull Text \nRemoval\n\n    \nWorkflow.FullText.Remover\n\n    \nLow\n\n    \n2\n\n    \n\n    \n10\n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nE-Mail \nMessage \nSend\n\n    \nWorkflow.Message.Send\n\n    \nLow\n\n    \n90\n\n    \n\n    \n10\n\n    \n\n    \n\n    \nFalse\n\n    \nFalse\n\n  \n\n  \n\n    \nDomain \nUpgrade\n\n    \nWorkflow.Domain.Upgrade\n\n    \nLow\n\n    \n180\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \nTrue\n\n  \n\n  \n\n    \nDomain \nDeletion\n\n    \nWorkflow.Domain.Delete\n\n    \nLow\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nForm Data \nXml \nDatabase \nReplication\n\n    \nWorkflow.FormData.XmlDatabase\n\n    \nNormal\n\n    \n2\n\n    \n\n    \n10\n\n    \n\n    \n\n    \n\n    \n\n  \n\n  \n\n    \nInstance \nXml \nDatabase \nReplication\n\n    \nWorkflow.Instance.XmlDatabase\n\n    \nNormal\n\n    \n2\n\n    \n\n    \n10\n\n    \n\n    \n\n    \n\n    \n\n  \n\n    \n\n    \nXml \nDatabase \nRemoval\n\n    \nWorkflow.FormData.XmlDatabaseRemover\n\n    \nNormal\n\n    \n2\n\n    \n\n    \n10", 
            "title": "Background Jobs"
        }, 
        {
            "location": "/ag/pa/background_jobs/#job-details", 
            "text": "Each job has following properties;  Type  Type of job.   Created At  Date and time of job is created.  Delete After  Date and time of job to delete.  Started At  Start date and time of job.  Completed At  Completion date and time of job.  Duration  Duration of execution if job is completed or duration of wait time in queue.  Score  Calculated priority score. This value is calculated from job type priority and workflow instance priority.  State  State of job. Can be one of following values; Waiting, Processing, Error, Completed, Aborted.  State Transition  Every job is created in \"Waiting\" state.  When a service agent pulls the job from queue, agent locks the job and changes to \"Processing\" state.  If job is successfully completed state changes to \"Completed\".  If job generates an error, state changes to \"Error\" and system administrator is notified. Some of job errors are automatically handled. For example e-mail sending job errors are ignored and re-scheduled and state changes to \"Waiting\" to try again later. If maximum try count limit exceeded state is changed to \"Error\" or \"Aborted\" by configuration settings.  For \"Aborted\" and \"Completed\" states job is automatically deleted from system if \"Delete After\" date is passed.     Job Log  Each job contains a log about detailed information of what is performed in background. Each log line has a in log level like Debug,Information,Warning,Error.", 
            "title": "Job Details"
        }, 
        {
            "location": "/ag/pa/background_jobs/#job-types", 
            "text": "", 
            "title": "Job Types"
        }, 
        {
            "location": "/ag/pa/background_jobs/#workflow-jobs", 
            "text": "Scheduled Task  Time based generic job. This job usually creates another jobs if any action required.  Task Evaluation  Created when initiate type workflow task scheduled to start periodically. Created by Scheduled Task for per task definition. You can find more detail in  Task Evaluation  section.   Work Item Evaluation  Created when normal type workflow task scheduled to check periodically. Created by Scheduled Task for per work item instance. You can find more detail in  Task Evaluation  section.  Work Item Processing  Created when a user or system complete a work item. This job advances to next step in workflow and executes the scripts in workflow, calculates the role scripts to assign to task.  Deadlined Work Item  Created when a work item's deadline occurs. This job is similar to \"Work Item Processing\" job but created when deadline date is missed.  Work Item Reminder  Created when a task reminder need to be sent.", 
            "title": "Workflow Jobs"
        }, 
        {
            "location": "/ag/pa/background_jobs/#xml-database-jobs", 
            "text": "Form Data Xml Database Replication  Created when workflow data need to be replicated on xml database. This job usually created when a workflow data is modified.  Instance Xml Database Replication  Created when a workflow history is changed and need to be replicated on xml database.  Xml Database Removal  Created when a worfklow data is removed. This job is usually created when a process version is deleted from system.", 
            "title": "Xml Database Jobs"
        }, 
        {
            "location": "/ag/pa/background_jobs/#full-text-indexing-jobs", 
            "text": "Work Item Full Text Indexing  Created when a workflow data is modified and updates the full text catalog.  Document Full Text Indexing  Created when a document content is modified and updates the full text catalog.  Full Text Removal  Created when a previously added document is removed from full text catalog.", 
            "title": "Full Text Indexing Jobs"
        }, 
        {
            "location": "/ag/pa/background_jobs/#domain-jobs", 
            "text": "E-Mail Message Send  Created when an email message is sent. Email content may be automatically generated from workflow templates or scripting environment.  Domain Upgrade  Created periodically to upgrade installed processes from market store.  Domain Deletion  Created when a domain is expired and no longer active.", 
            "title": "Domain Jobs"
        }, 
        {
            "location": "/ag/pa/background_jobs/#default-job-configuration", 
            "text": "Workrunner uses following default configuration to manage job queue.  \n.tg  {border-collapse:collapse;border-spacing:0;}\n.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}\n.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}\n.tg .tg-baqh{text-align:center;vertical-align:top}\n.tg .tg-yw4l{vertical-align:top}  \n\n   \n     Name \n     Internal Name \n     Priority \n     Delete After (days) (No) \n     Retry  Duration  (min) (No) \n     Max  Retry (No) \n     Max  Retry  Result (Abort) \n     Error  Result (Error) \n     Alert  Error (True) \n     Alert  Abort (False) \n   \n   \n     Scheduled  Task \n     Workflow.ScheduledTask \n     High \n     90 \n     \n     \n     \n     \n     \n     \n   \n   \n     Task  Evaluation \n     Workflow.Task.Evaluate \n     High \n     180 \n     \n     \n     \n     \n     \n     \n   \n   \n     Work Item  Evaluation \n     Workflow.WorkItem.Evaluate \n     High \n     180 \n     10 \n     20 \n     \n     \n     \n     \n   \n   \n     Work Item  Processing \n     Workflow.WorkItem.Process \n     High \n     180 \n     10 \n     20 \n     Error \n     \n     \n     True \n   \n   \n     Deadlined  Work Item \n     Workflow.WorkItem.Deadline \n     High \n     180 \n     10 \n     20 \n     \n     \n     \n     True \n   \n   \n     Work Item  Reminder \n     Workflow.WorkItem.Reminder \n     High \n     60 \n     \n     \n     \n     \n     \n     \n   \n   \n     Work Item  Full Text  Indexing \n     Workflow.WorkItem.FullText \n     Low \n     2 \n     \n     10 \n     \n     \n     \n     \n   \n   \n     Document  Full Text  Indexing \n     Workflow.Document.FullText \n     Low \n     2 \n     \n     20 \n     \n     \n     \n     \n   \n   \n     Full Text  Removal \n     Workflow.FullText.Remover \n     Low \n     2 \n     \n     10 \n     \n     \n     \n     \n   \n   \n     E-Mail  Message  Send \n     Workflow.Message.Send \n     Low \n     90 \n     \n     10 \n     \n     \n     False \n     False \n   \n   \n     Domain  Upgrade \n     Workflow.Domain.Upgrade \n     Low \n     180 \n     \n     \n     \n     \n     \n     True \n   \n   \n     Domain  Deletion \n     Workflow.Domain.Delete \n     Low \n     \n     \n     \n     \n     \n     \n     \n   \n   \n     Form Data  Xml  Database  Replication \n     Workflow.FormData.XmlDatabase \n     Normal \n     2 \n     \n     10 \n     \n     \n     \n     \n   \n   \n     Instance  Xml  Database  Replication \n     Workflow.Instance.XmlDatabase \n     Normal \n     2 \n     \n     10 \n     \n     \n     \n     \n   \n     \n     Xml  Database  Removal \n     Workflow.FormData.XmlDatabaseRemover \n     Normal \n     2 \n     \n     10", 
            "title": "Default Job Configuration"
        }, 
        {
            "location": "/ag/is/embedding_workrunner/", 
            "text": "", 
            "title": "Embedding Workrunner"
        }, 
        {
            "location": "/ag/is/google_service_authentication/", 
            "text": "", 
            "title": "Google Service Authentication"
        }, 
        {
            "location": "/ag/is/office365_service_authentication/", 
            "text": "", 
            "title": "Office365 Service Authentication"
        }, 
        {
            "location": "/ag/is/rest_services/", 
            "text": "", 
            "title": "Rest Services"
        }, 
        {
            "location": "/ag/sa/system_administration/", 
            "text": "Administration part is a system control mechanism and is managed with five pre-built business processes in Workrunner. Other administration part specify is to analysis \nbackground jobs\n situation with graphic diagrams.\n\n\nJob States\n\n\nJob states graphic is exhibited each of background job situation and name. Background job names are separated from each other with different color.\n\n\n\n\nWaiting; each background job at waiting state is shown in different color, when you hover over the color with mouse you will see job name and job count.\n\n\nProcessing;  each background job at processing state is shown in different color, when you hover over the color with mouse you will see job name and job count.\n\n\nError; each background job at error state is shown in different color, when you hover over the color with mouse you will see job name and job count.\n\n\nCompleted;each background job at completed state is shown in different color, when you hover over the color with mouse you will see job name and job count.\n\n\n\n\n\n\nJob Counts\n\n\nJob counts graphic is exhibited each of background job count and name. Background job names are separated from each other with different color. When you hover over on the color with mouse you will see job date, job name and job count.\n\n\n\n\nJob Completion Duration\n\n\nJob completion duration graphic is exhibited to each of completed background job total time and name. Background job names are separated from each other with different color. When you hover over on the color with mouse you will see job date, job name and total of job completion duration.\n\n\n\n\nJob Wait Duration In Queue\n\n\nJob wait duration in queue graphic is exhibited to each of background job wait duration in queue total time and name. Background job names are separated from each other with different color. When you hover over on the color with mouse you will see job date, job name and total of job wait duration in queue.\n\n\n\n\nYou can use chart context menu for some operations in the graphic diagrams.\n\n\nChart Context Menu\n\n\nSymbol: \n\n\nChart context menu enables to print and to download operations. \n\n\n\n\nPrint chart\n\n\nDownload PNG image\n\n\nDownload JPEG image\n\n\nDownload PDF document\n\n\nDownload SVG vector image", 
            "title": "Overview"
        }, 
        {
            "location": "/ag/sa/system_administration/#job-states", 
            "text": "Job states graphic is exhibited each of background job situation and name. Background job names are separated from each other with different color.   Waiting; each background job at waiting state is shown in different color, when you hover over the color with mouse you will see job name and job count.  Processing;  each background job at processing state is shown in different color, when you hover over the color with mouse you will see job name and job count.  Error; each background job at error state is shown in different color, when you hover over the color with mouse you will see job name and job count.  Completed;each background job at completed state is shown in different color, when you hover over the color with mouse you will see job name and job count.", 
            "title": "Job States"
        }, 
        {
            "location": "/ag/sa/system_administration/#job-counts", 
            "text": "Job counts graphic is exhibited each of background job count and name. Background job names are separated from each other with different color. When you hover over on the color with mouse you will see job date, job name and job count.", 
            "title": "Job Counts"
        }, 
        {
            "location": "/ag/sa/system_administration/#job-completion-duration", 
            "text": "Job completion duration graphic is exhibited to each of completed background job total time and name. Background job names are separated from each other with different color. When you hover over on the color with mouse you will see job date, job name and total of job completion duration.", 
            "title": "Job Completion Duration"
        }, 
        {
            "location": "/ag/sa/system_administration/#job-wait-duration-in-queue", 
            "text": "Job wait duration in queue graphic is exhibited to each of background job wait duration in queue total time and name. Background job names are separated from each other with different color. When you hover over on the color with mouse you will see job date, job name and total of job wait duration in queue.   You can use chart context menu for some operations in the graphic diagrams.", 
            "title": "Job Wait Duration In Queue"
        }, 
        {
            "location": "/ag/sa/system_administration/#chart-context-menu", 
            "text": "Symbol:   Chart context menu enables to print and to download operations.    Print chart  Download PNG image  Download JPEG image  Download PDF document  Download SVG vector image", 
            "title": "Chart Context Menu"
        }, 
        {
            "location": "/ag/sa/organization_database_designer/", 
            "text": "", 
            "title": "Organization Database Designer"
        }, 
        {
            "location": "/ag/sa/organization_units/", 
            "text": "", 
            "title": "Organization Units"
        }, 
        {
            "location": "/ag/sa/positions/", 
            "text": "", 
            "title": "Positions"
        }, 
        {
            "location": "/ag/sa/users/", 
            "text": "", 
            "title": "Users"
        }, 
        {
            "location": "/ag/sa/employee/", 
            "text": "", 
            "title": "Employee"
        }, 
        {
            "location": "/ag/sa/edit_domain/", 
            "text": "", 
            "title": "Edit Domain"
        }, 
        {
            "location": "/ag/sa/edit_groups/", 
            "text": "", 
            "title": "Edit Groups"
        }, 
        {
            "location": "/ag/sa/background_jobs_manager/", 
            "text": "Background jobs manager allows to view and manage background jobs. It consists of two part; filter and results.\n\n\nFilter\n\n\nFilter part defines the searching criterions for find intended jobs in the background jobs manager step. Searching criterions are work type, date start, date end, show and log text content.\n\n\n\n\nWork Type\n\nSpecifies the type of backgrounds job. When you click the arrow button, the background work type list will open. \n\n\n\n\nDate Start\n\nSpecifies the start date of background job.\n\n\nDate End\n\nSpecifies the end date of background job. Only completed background jobs have end date, otherwise end date is null.\n\n\nShow\n\nShow title has five options for to following back ground jobs. If you click the any option, the related option of jobs will be listed under the results title. \n\n\nLog Text Content\n\nSearch term to filter by job execution log.\n\n\nResults\n\n\nResults part lists of background jobs features. Features title are the work type, the started at, the completed at, the duration and the state.\n\n\n\n\nSelect to perform batch operation\n\nThis feature consists of two part for to change of job situation.\n\n\n\n\nSet all to waiting, to change all job situation the waiting state.\n\n\nSet all to aborted, to change all job situation the aborted state.\n\n\n\n\nSearch\n\nUse to find any back ground job in the listed background jobs.\n\n\nWork Type\n\nJob is a work of type.\n\n\nStarted At\n\nJob is a started of date.\n\n\nCompleted At\n\nJob is an ended of date.\n\n\nDuration\n\nJob is the permanence time.\n\n\nState\n\nJob is a situation in the background. State features are:\n\n\n\n\n\n\n\n\nState\n\n\nDefinition\n\n\n\n\n\n\n\n\n\n\n\n\nWaiting describes the pending jobs.\n\n\n\n\n\n\n\n\nProcessing describes the continuing jobs.\n\n\n\n\n\n\n\n\nError describes the false jobs.\n\n\n\n\n\n\n\n\nCompleted describes the finished jobs.\n\n\n\n\n\n\n\n\nAborted describes the canceled jobs.\n\n\n\n\n\n\n\n\nState\n\nThis field help to change an error job state in the background. You will see two button, those are:\n\n\n\n\n\n\n\n\nState\n\n\nDefinition\n\n\n\n\n\n\n\n\n\n\n\n\nIf you click this button, system will change job situation the  error from the waiting.\n\n\n\n\n\n\n\n\nIf you click this button, system will change job situation the error from the aborted.\n\n\n\n\n\n\n\n\nBackground job manager part further information \nhere\n.", 
            "title": "Jobs Manager"
        }, 
        {
            "location": "/ag/sa/background_jobs_manager/#filter", 
            "text": "Filter part defines the searching criterions for find intended jobs in the background jobs manager step. Searching criterions are work type, date start, date end, show and log text content.   Work Type \nSpecifies the type of backgrounds job. When you click the arrow button, the background work type list will open.    Date Start \nSpecifies the start date of background job.  Date End \nSpecifies the end date of background job. Only completed background jobs have end date, otherwise end date is null.  Show \nShow title has five options for to following back ground jobs. If you click the any option, the related option of jobs will be listed under the results title.   Log Text Content \nSearch term to filter by job execution log.", 
            "title": "Filter"
        }, 
        {
            "location": "/ag/sa/background_jobs_manager/#results", 
            "text": "Results part lists of background jobs features. Features title are the work type, the started at, the completed at, the duration and the state.   Select to perform batch operation \nThis feature consists of two part for to change of job situation.   Set all to waiting, to change all job situation the waiting state.  Set all to aborted, to change all job situation the aborted state.   Search \nUse to find any back ground job in the listed background jobs.  Work Type \nJob is a work of type.  Started At \nJob is a started of date.  Completed At \nJob is an ended of date.  Duration \nJob is the permanence time.  State \nJob is a situation in the background. State features are:     State  Definition       Waiting describes the pending jobs.     Processing describes the continuing jobs.     Error describes the false jobs.     Completed describes the finished jobs.     Aborted describes the canceled jobs.     State \nThis field help to change an error job state in the background. You will see two button, those are:     State  Definition       If you click this button, system will change job situation the  error from the waiting.     If you click this button, system will change job situation the error from the aborted.     Background job manager part further information  here .", 
            "title": "Results"
        }, 
        {
            "location": "/ag/sa/job_details/", 
            "text": "", 
            "title": "Job Details"
        }, 
        {
            "location": "/ag/sa/search_work_item/", 
            "text": "", 
            "title": "Search Work Item"
        }, 
        {
            "location": "/su/workrunner_qa/", 
            "text": "", 
            "title": "Workrunner Q&A"
        }, 
        {
            "location": "/su/support_site/", 
            "text": "", 
            "title": "Support Site"
        }, 
        {
            "location": "/ho/edit_organization_unit_part/", 
            "text": "", 
            "title": "How to Edit Organization Unit Part"
        }, 
        {
            "location": "/ho/manage_users_positions/", 
            "text": "", 
            "title": "How to Manage Users Positions"
        }, 
        {
            "location": "/ho/edit_users_part/", 
            "text": "", 
            "title": "How to Edit Users Part"
        }, 
        {
            "location": "/ho/manage_edit_groups_part/", 
            "text": "", 
            "title": "How to Manage Edit Groups Part"
        }, 
        {
            "location": "/ho/edit_working_calendar/", 
            "text": "", 
            "title": "How to Edit Working Calendar"
        }, 
        {
            "location": "/ho/change_workrunner_system_theme/", 
            "text": "", 
            "title": "How to Change Workrunner System Theme"
        }, 
        {
            "location": "/ho/change_system_logo/", 
            "text": "", 
            "title": "How to Change System Logo"
        }, 
        {
            "location": "/ho/create_theme_style_with_css/", 
            "text": "", 
            "title": "How to Create a New Theme Style With CSS"
        }, 
        {
            "location": "/ho/manage_domain_login_methods/", 
            "text": "", 
            "title": "How to Manage Domain Login Methods"
        }, 
        {
            "location": "/ho/create_folder/", 
            "text": "", 
            "title": "Create Folder"
        }, 
        {
            "location": "/ho/create_process_diagram/", 
            "text": "", 
            "title": "Create Process Diagram"
        }, 
        {
            "location": "/ho/create_data_model/", 
            "text": "", 
            "title": "Create Data Model"
        }, 
        {
            "location": "/ho/create_forms/", 
            "text": "", 
            "title": "Create Forms"
        }
    ]
}